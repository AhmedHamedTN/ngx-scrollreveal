var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/AbstractNgsRevealDirective.html",[0,0.306,1,1.477]],["body/classes/AbstractNgsRevealDirective.html",[0,0.541,1,2.276,2,0.837,3,0.706,4,0.477,5,3.079,6,1.453,7,3.253,8,0.706,9,4.079,10,0.842,11,4.079,12,4.079,13,0.735,14,0.587,15,1.672,16,1.238,17,1.672,18,4.456,19,4.079,20,1.815,21,3.253,22,1.263,23,1.346,24,4.079,25,1.672,26,0.061,27,1.437,28,1.146,29,0.885,30,0.898,31,4.079,32,1.202,33,3.253,34,2.013,35,0.837,36,1.437,37,0.735,38,2.688,39,2.144,40,0.477,41,3.253,42,3.253,43,3.241,44,1.672,45,3.253,46,1.146,47,0.046,48,0.046]],["title/interfaces/NgsHasScrollReveal.html",[49,1.085,50,1.477]],["body/interfaces/NgsHasScrollReveal.html",[0,0.201,2,0.446,3,0.691,4,0.255,6,1.455,8,0.376,10,0.313,13,0.875,14,0.313,15,1.567,16,1.176,17,1.457,22,0.446,26,0.061,28,0.819,29,0.957,30,0.796,32,0.819,35,0.914,36,1.555,37,0.641,40,0.522,44,1.08,46,1.347,47,0.03,48,0.03,49,1.65,50,1.776,51,0.711,52,0.828,53,1.736,54,1.469,55,1.257,56,2.245,57,1.92,58,0.641,59,1.696,60,0.376,61,0.611,62,1.305,63,1.143,64,2.462,65,2.586,66,1.143,67,1.469,68,1.983,69,0.828,70,0.968,71,1.776,72,1.567,73,0.968,74,0.968,75,0.968,76,0.968,77,1.469,78,1.143,79,1.143,80,1.143,81,0.968,82,1.143,83,1.143,84,0.968,85,1.143,86,1.143,87,1.983,88,1.143,89,1.143,90,1.143,91,0.711,92,1.469,93,1.143,94,1.469,95,1.143,96,1.736,97,0.968,98,1.257,99,1.736,100,0.828,101,0.828,102,1.305,103,1.519,104,0.828,105,1.519,106,1.49,107,1.457,108,1.983,109,1.983,110,2.132,111,0.711,112,0.968,113,0.828,114,1.257,115,0.711,116,0.968,117,0.968,118,3.055,119,1.143,120,1.143,121,1.736,122,1.736,123,1.983,124,1.736,125,1.736,126,1.736,127,1.143,128,1.143,129,1.143,130,1.143,131,1.143,132,1.824,133,1.567,134,1.766,135,2.132,136,1.143,137,1.143,138,1.143,139,1.143,140,0.968,141,1.143,142,0.873,143,1.736,144,1.143,145,1.143,146,1.776,147,1.143,148,1.143,149,0.677,150,0.828,151,0.524,152,0.611,153,0.968,154,0.611,155,0.968,156,1.143,157,0.968,158,1.736,159,1.143,160,1.736,161,1.143,162,0.828,163,0.968,164,1.143,165,1.143,166,1.143,167,1.143,168,1.143,169,1.143,170,0.711,171,0.711,172,1.143,173,1.143,174,1.143,175,1.143,176,1.143,177,1.143,178,1.08,179,2.756,180,1.143,181,1.143,182,1.143,183,1.143,184,1.983,185,2.343,186,1.257,187,0.968,188,0.968,189,0.968,190,0.968,191,0.968,192,1.143,193,1.143,194,1.143,195,1.143,196,1.143,197,1.143,198,1.143,199,1.143,200,1.143,201,1.143,202,1.143,203,1.143,204,1.143,205,2.652,206,1.143,207,1.143,208,0.968,209,1.143,210,1.143,211,0.524,212,1.154,213,1.143,214,1.469,215,1.257,216,1.305,217,0.968,218,1.143,219,1.143,220,1.696,221,1.143,222,1.143,223,1.143,224,1.143,225,1.143,226,1.143,227,1.143,228,1.143,229,1.143,230,1.143,231,0.711,232,1.143,233,0.828,234,1.143,235,0.928,236,1.143,237,1.143,238,1.143,239,1.143,240,1.257,241,1.143,242,1.824,243,1.305,244,0.968,245,0.711,246,0.968,247,0.968,248,0.968,249,1.567,250,0.828,251,1.143,252,0.828,253,1.143,254,0.828,255,1.143,256,0.968,257,1.143,258,1.143,259,0.828,260,1.143,261,1.143]],["title/injectables/NgsRevealConfig.html",[30,0.477,58,0.477]],["body/injectables/NgsRevealConfig.html",[0,0.155,2,0.344,3,0.29,4,0.196,6,1.555,8,0.29,10,0.651,13,0.556,14,0.241,15,1.264,16,0.344,23,1.439,26,0.061,28,1.19,29,1.11,30,0.387,32,0.975,34,1.985,35,0.552,36,1.086,37,0.241,40,0.196,46,1.086,47,0.024,48,0.024,51,1.965,55,1.025,57,1.025,58,0.609,60,0.29,72,1.264,76,2.013,84,1.198,91,1.264,92,1.198,97,2.013,100,1.025,102,1.782,103,2.274,104,1.721,105,1.025,106,1.481,107,1.264,108,1.72,109,1.198,110,1.198,111,0.88,112,1.198,113,1.025,114,1.025,115,0.88,116,1.198,117,1.198,123,1.198,140,1.198,142,0.943,146,1.198,149,1.178,150,1.025,151,1.43,154,1.086,170,0.548,171,1.104,186,1.025,187,1.72,188,1.72,189,1.72,190,1.72,208,1.198,211,0.648,212,0.648,217,0.745,220,1.471,235,0.757,245,0.88,249,1.264,254,2.074,259,1.025,262,1.336,263,1.706,264,1.706,265,1.415,266,1.415,267,3.084,268,2.45,269,4.582,270,3.608,271,3.084,272,3.084,273,4.176,274,3.608,275,3.608,276,3.084,277,3.608,278,3.084,279,3.084,280,3.084,281,3.084,282,1.336,283,2.148,284,3.943,285,2.45,286,2.148,287,1.336,288,2.148,289,1.336,290,2.148,291,3.133,292,1.336,293,2.148,294,3.084,295,1.336,296,1.336,297,2.148,298,3.318,299,2.148,300,2.866,301,2.148,302,4.843,303,1.336,304,3.084,305,3.133,306,1.706,307,3.084,308,1.415,309,3.084,310,2.148,311,1.336,312,2.148,313,3.608,314,2.148,315,1.336,316,1.706,317,2.148,318,1.706,319,2.148,320,1.336,321,2.148,322,2.148,323,2.148,324,1.706,325,2.148,326,1.415,327,1.336,328,2.148,329,2.148,330,3.084,331,1.198,332,2.148,333,2.148,334,2.148,335,1.198,336,2.148,337,2.148,338,1.336,339,2.148,340,3.084,341,1.336,342,2.148,343,1.336,344,2.148,345,4.347,346,3.608,347,3.608,348,3.792,349,3.378,350,3.378,351,2.684,352,1.336,353,2.148,354,2.148,355,1.336,356,2.148,357,2.148,358,2.148,359,3.792,360,2.148,361,2.148,362,2.148,363,1.336,364,2.148,365,2.148,366,1.336,367,2.148,368,2.148,369,3.792,370,3.378,371,1.336,372,2.148,373,3.084,374,2.148,375,1.336,376,2.148,377,1.706,378,2.148,379,1.336,380,2.148,381,2.148,382,2.148,383,2.148,384,2.148,385,2.148,386,2.148,387,2.148]],["title/directives/NgsRevealDirective.html",[10,0.477,388,1.477]],["body/directives/NgsRevealDirective.html",[0,0.35,1,2.174,2,0.778,3,0.656,4,0.444,5,3.176,6,1.421,8,0.656,10,0.849,13,0.702,14,0.546,16,0.778,17,1.597,20,1.688,22,1.261,23,1.421,25,1.597,26,0.06,27,1.373,28,0.778,29,0.845,30,0.702,32,0.778,34,1.597,35,1.002,36,1.373,37,0.82,38,2.568,39,1.995,40,0.444,44,1.241,47,0.044,48,0.044,59,2.299,60,0.656,61,1.066,101,1.859,106,1.421,111,1.241,134,1.597,142,0.935,149,1.002,151,0.914,212,1.301,216,1.241,233,1.859,235,1.518,243,1.597,265,2.998,300,2.404,388,2.174,389,3.027,390,2.174,391,2.568,392,2.84,393,2.998,394,3.423,395,4.309,396,4.309,397,2.568,398,3.095,399,2.404,400,3.027,401,3.896,402,3.896,403,3.027,404,3.027,405,2.404,406,2.404,407,2.404,408,3.027,409,3.027,410,2.404,411,2.404,412,1.995,413,2.404,414,3.027]],["title/modules/NgsRevealModule.html",[415,1.085,416,1.085]],["body/modules/NgsRevealModule.html",[0,0.388,2,0.863,3,0.728,4,0.492,8,0.728,22,1.069,26,0.061,30,0.75,37,0.875,40,0.726,47,0.047,48,0.047,60,0.728,62,1.704,102,1.375,152,1.592,178,1.704,211,1.013,335,1.872,388,2.909,415,1.936,416,2.108,417,1.601,418,2.665,419,1.872,420,2.665,421,2.665,422,2.665,423,2.909,424,3.303,425,3.355,426,3.355,427,3.303,428,2.74,429,3.355,430,4.158,431,2.665,432,4.158,433,4.158]],["title/injectables/NgsRevealService.html",[22,0.681,58,0.477]],["body/injectables/NgsRevealService.html",[0,0.154,2,0.342,3,0.582,4,0.195,6,1.485,8,0.667,10,0.385,13,0.825,14,0.24,15,1.26,16,1.216,17,1.709,20,0.741,22,0.55,23,1.407,25,1.26,26,0.061,27,1.083,28,1.177,29,0.993,30,0.853,32,0.866,35,1.072,36,1.575,37,0.554,40,0.451,44,0.876,46,1.187,47,0.024,48,0.024,49,1.26,50,1.192,51,1.925,52,0.634,53,0.875,54,0.741,55,0.634,56,2.195,57,1.717,58,0.649,59,1.938,60,0.288,61,0.468,62,1.551,63,0.875,64,2.578,65,2.699,66,0.875,67,1.192,68,1.715,69,0.634,70,0.741,71,1.496,72,1.381,73,0.741,74,0.741,75,0.741,76,0.741,77,1.192,78,0.875,79,0.875,80,0.875,81,0.741,82,0.875,83,0.875,84,0.741,85,0.875,86,0.875,87,1.715,88,0.875,89,0.875,90,0.875,91,0.545,92,1.192,93,0.875,94,1.192,95,0.875,96,1.409,97,0.741,98,1.02,99,1.767,100,0.634,101,0.634,102,1.381,103,1.466,104,0.634,105,1.466,106,1.516,107,1.381,108,1.879,109,1.879,110,2.008,111,0.545,112,0.741,113,0.634,114,1.28,115,0.545,116,0.741,117,0.741,118,2.86,119,0.875,120,0.875,121,1.767,122,1.767,123,1.879,124,1.767,125,1.767,126,2.22,127,0.875,128,0.875,129,0.875,130,0.875,131,0.875,132,1.607,133,1.551,134,1.833,135,2.195,136,0.875,137,0.875,138,0.875,139,0.875,140,0.741,141,0.875,142,0.904,143,1.767,144,0.875,145,0.875,146,1.879,147,0.875,148,0.875,149,0.55,150,0.634,151,0.401,152,0.468,153,0.741,154,0.753,155,1.192,156,1.409,157,1.192,158,2.371,159,1.409,160,2.025,161,1.409,162,1.02,163,1.192,164,1.409,165,1.409,166,1.409,167,1.409,168,1.409,169,1.409,170,0.545,171,0.545,172,0.875,173,0.875,174,0.875,175,0.875,176,0.875,177,0.875,178,0.876,179,3.137,180,2.025,181,2.025,182,2.025,183,2.025,184,2.195,185,2.593,186,1.466,187,1.715,188,1.715,189,1.715,190,1.715,191,1.192,192,0.875,193,0.875,194,0.875,195,0.875,196,0.875,197,0.875,198,0.875,199,0.875,200,0.875,201,0.875,202,0.875,203,0.875,204,0.875,205,2.371,206,0.875,207,0.875,208,1.192,209,1.409,210,1.409,211,0.645,212,1.259,213,1.409,214,1.192,215,1.02,216,1.381,217,0.741,218,0.875,219,0.875,220,1.466,221,0.875,222,0.875,223,0.875,224,0.875,225,0.875,226,0.875,227,0.875,228,1.767,229,0.875,230,0.875,231,0.876,232,2.025,233,1.02,234,1.409,235,1.083,236,1.409,237,0.875,238,0.875,239,1.409,240,1.466,241,1.409,242,1.989,243,1.475,244,1.192,245,0.876,246,1.192,247,1.192,248,1.192,249,1.613,250,1.02,251,1.409,252,1.02,253,1.409,254,1.28,255,0.875,256,0.741,257,0.875,258,1.409,259,1.02,260,0.875,261,0.875,434,2.137,435,2.137,436,1.328,437,1.328,438,1.328,439,1.328,440,1.767,441,1.328,442,1.328,443,1.328,444,1.328,445,1.328,446,1.328,447,1.328,448,1.328,449,1.328,450,1.328,451,1.328,452,1.328]],["title/directives/NgsRevealSetDirective.html",[10,0.477,423,1.477]],["body/directives/NgsRevealSetDirective.html",[0,0.262,1,1.787,2,0.582,3,0.491,4,0.332,5,3.113,6,1.566,8,0.491,10,0.82,13,0.67,14,0.408,16,0.582,17,1.313,20,1.263,22,1.17,23,1.403,25,1.523,26,0.061,27,1.309,28,1.17,29,0.986,30,0.577,32,1.096,34,0.928,35,1.039,36,1.309,37,0.728,38,2.11,39,1.492,40,0.332,44,0.928,47,0.036,48,0.036,54,1.787,59,2.111,60,0.491,61,0.798,81,1.263,87,2.253,101,1.528,106,1.508,111,0.928,114,1.927,115,1.313,132,1.528,133,1.656,134,1.313,135,1.787,142,0.876,149,0.824,212,1.122,216,1.937,235,1.309,240,1.927,242,2.285,243,1.656,245,1.313,248,2.253,249,1.313,250,1.927,252,1.927,254,1.528,256,1.787,268,2.544,308,2.11,390,2.468,391,2.11,392,2.448,393,2.662,394,3.515,397,2.11,398,2.544,399,1.799,405,1.799,406,1.799,407,1.799,410,1.799,411,1.799,412,1.492,413,1.799,423,1.787,453,2.264,454,2.544,455,3.515,456,3.613,457,3.202,458,3.202,459,4.039,460,4.261,461,3.385,462,2.544,463,3.202,464,3.202,465,4.424,466,3.715,467,3.385,468,3.202,469,3.202,470,2.264,471,3.202,472,2.264,473,3.202,474,3.202,475,2.264,476,2.264,477,3.202,478,2.264,479,3.202,480,2.264,481,2.264,482,2.264,483,2.264,484,2.264,485,2.264,486,3.202,487,2.264,488,2.264,489,2.264]],["title/interfaces/NgsScrollReveal.html",[49,1.085,57,1.263]],["body/interfaces/NgsScrollReveal.html",[0,0.173,2,0.384,3,0.628,4,0.219,6,1.479,8,0.628,10,0.269,13,0.865,14,0.269,15,1.462,16,1.132,17,1.552,22,0.384,23,1.077,25,0.961,26,0.061,27,0.826,28,1.019,29,1.025,30,0.794,32,0.917,35,1.132,36,1.599,37,0.592,40,0.482,44,0.961,46,1.257,47,0.027,48,0.027,49,1.552,50,1.308,51,1.552,52,0.712,53,0.984,54,0.833,55,0.712,56,1.99,57,1.702,58,0.592,59,1.566,60,0.324,61,0.526,62,1.187,63,0.984,64,2.354,65,2.496,66,0.984,67,1.616,68,2.209,69,0.712,70,0.833,71,2.209,72,1.462,73,0.833,74,0.833,75,1.308,76,1.308,77,1.831,78,1.545,79,1.545,80,1.545,81,1.308,82,1.545,83,1.545,84,1.308,85,1.545,86,2.163,87,2.456,88,1.545,89,1.545,90,1.545,91,0.961,92,1.831,93,1.545,94,1.616,95,1.545,96,2.495,97,1.308,98,1.807,99,1.909,100,1.119,101,1.119,102,1.345,103,1.702,104,1.119,105,1.702,106,1.492,107,1.623,108,2.209,109,2.209,110,2.354,111,0.961,112,1.308,113,1.119,114,1.382,115,0.961,116,1.308,117,1.308,118,2.949,119,1.545,120,1.545,121,1.909,122,1.909,123,2.209,124,1.909,125,1.909,126,2.351,127,1.545,128,1.545,129,1.545,130,1.545,131,1.545,132,1.807,133,1.623,134,1.77,135,2.456,136,1.545,137,1.545,138,1.545,139,1.545,140,1.308,141,1.545,142,0.859,143,1.909,144,1.545,145,1.545,146,1.831,147,1.545,148,2.163,149,0.603,150,0.712,151,0.451,152,0.526,153,0.833,154,0.526,155,0.833,156,0.984,157,0.833,158,1.545,159,0.984,160,1.545,161,0.984,162,0.712,163,0.833,164,0.984,165,0.984,166,0.984,167,0.984,168,0.984,169,0.984,170,0.612,171,0.612,172,0.984,173,0.984,174,0.984,175,0.984,176,0.984,177,0.984,178,0.961,179,2.61,180,0.984,181,0.984,182,0.984,183,0.984,184,1.831,185,2.163,186,1.119,187,0.833,188,0.833,189,0.833,190,0.833,191,0.833,192,0.984,193,0.984,194,0.984,195,0.984,196,0.984,197,0.984,198,0.984,199,0.984,200,0.984,201,0.984,202,0.984,203,0.984,204,0.984,205,2.495,206,0.984,207,0.984,208,0.833,209,0.984,210,0.984,211,0.451,212,1.077,213,0.984,214,1.308,215,1.119,216,1.187,217,0.833,218,0.984,219,0.984,220,1.566,221,0.984,222,0.984,223,0.984,224,0.984,225,0.984,226,0.984,227,0.984,228,0.984,229,0.984,230,0.984,231,0.612,232,0.984,233,0.712,234,0.984,235,0.826,236,0.984,237,0.984,238,0.984,239,0.984,240,1.119,241,0.984,242,1.702,243,1.187,244,0.833,245,0.612,246,0.833,247,0.833,248,0.833,249,1.462,250,0.712,251,0.984,252,0.712,253,0.984,254,0.712,255,0.984,256,0.833,257,0.984,258,0.984,259,0.712,260,0.984,261,0.984,440,1.545,490,2.345,491,1.493,492,1.493,493,1.493,494,1.493,495,1.493]],["title/injectables/WindowService.html",[58,0.477,62,1.085]],["body/injectables/WindowService.html",[0,0.425,2,0.943,3,0.796,4,0.538,8,0.796,14,0.661,23,1.108,26,0.06,35,1.209,37,0.661,40,0.538,43,2.914,46,1.656,47,0.05,48,0.05,56,2.778,58,0.847,60,0.796,62,1.8,91,1.504,149,0.943,154,1.547,170,1.504,171,1.504,397,2.894,496,2.914,497,4.391,498,4.699,499,3.669,500,3.669,501,3.488,502,2.418,503,3.669,504,3.488]],["title/changelog.html",[231,0.916,331,1.246,505,2.234]],["body/changelog.html",[0,0.401,3,0.55,4,0.372,13,0.915,16,0.891,26,0.059,27,1.22,28,0.652,29,0.55,30,0.624,32,0.652,34,1.42,37,0.883,40,0.579,47,0.039,48,0.045,58,0.457,61,1.707,98,1.209,105,2.023,106,0.765,132,1.882,133,1.039,142,0.55,151,0.765,152,1.22,154,0.893,162,1.652,170,1.039,178,1.039,186,1.882,212,0.765,214,1.414,215,1.652,259,1.209,266,1.67,308,2.794,316,2.013,318,2.013,390,1.414,416,1.879,419,1.932,428,2.282,502,1.67,506,2.534,507,2.013,508,3.945,509,2.534,510,2.534,511,4.691,512,3.945,513,3.463,514,3.369,515,2.534,516,4.24,517,3.463,518,3.463,519,2.534,520,2.534,521,3.463,522,2.013,523,3.527,524,2.751,525,2.534,526,4.24,527,2.534,528,2.013,529,2.534,530,4.24,531,3.134,532,3.369,533,3.527,534,3.369,535,3.463,536,3.463,537,2.534,538,2.534,539,3.369,540,2.751,541,2.534,542,2.534,543,2.534,544,2.534,545,2.534,546,2.751,547,2.534,548,2.534,549,2.534,550,2.534,551,2.013,552,2.534,553,1.67,554,2.534,555,2.534,556,2.534,557,2.534,558,2.534,559,2.534,560,4.583,561,3.945,562,2.534,563,3.463,564,3.945,565,2.534,566,2.534,567,2.534,568,2.534,569,2.534,570,2.534,571,2.534,572,2.751,573,2.534,574,3.945,575,2.013,576,2.534,577,2.534,578,3.463,579,3.945,580,3.945,581,2.534,582,2.534,583,2.534,584,2.534,585,3.945,586,3.463,587,2.013,588,2.534,589,2.534,590,2.534,591,2.534,592,2.534,593,2.534,594,2.534,595,2.534,596,3.463,597,2.534,598,2.534,599,2.534,600,2.013,601,2.534,602,2.534,603,2.013,604,2.534,605,2.534,606,2.534,607,2.534,608,2.534,609,2.013,610,2.013,611,2.013,612,2.534,613,3.945,614,2.534,615,2.534,616,2.534,617,2.534,618,2.534,619,3.463,620,2.534,621,2.534]],["title/dependencies.html",[417,1.513,531,1.774]],["body/dependencies.html",[13,0.734,26,0.058,47,0.053,48,0.053,60,0.883,417,1.942,431,3.234,622,4.667,623,3.234]],["title/miscellaneous/functions.html",[149,0.816,624,1.246]],["body/miscellaneous/functions.html",[8,0.812,13,0.854,14,0.675,25,1.943,26,0.057,27,1.67,29,1.086,35,0.963,47,0.05,48,0.05,51,1.534,52,2.12,94,2.088,142,0.812,149,1.143,150,1.786,151,1.13,153,2.088,440,2.466,496,2.973,501,3.765,504,3.894,624,2.088,625,3.743,626,4.443,627,4.739,628,2.973,629,3.743,630,3.743,631,4.443,632,3.743,633,3.743,634,3.743]],["title/index.html",[14,0.403,231,0.916,331,1.246]],["body/index.html",[0,0.407,4,0.515,6,1.061,10,0.856,13,0.926,15,0.84,16,0.903,22,0.766,23,0.9,26,0.06,29,0.889,30,0.696,34,1.581,37,0.796,40,0.515,46,1.238,47,0.034,48,0.034,55,0.977,58,0.369,60,0.646,61,0.722,65,1.663,69,1.422,72,1.581,75,1.663,98,0.977,100,1.422,103,2.106,104,0.977,106,1.291,107,1.44,113,0.977,115,1.222,133,0.84,134,1.222,142,0.981,151,1.165,152,0.722,154,0.722,155,2.287,157,1.143,162,1.676,163,1.143,171,1.44,178,1.44,184,1.96,191,1.143,211,1.061,212,1.415,216,1.222,220,1.841,233,0.977,235,1.444,240,0.977,242,1.422,243,1.44,244,1.663,245,0.84,246,1.143,247,1.663,249,1.222,250,0.977,252,1.422,263,3.593,264,1.627,265,1.964,266,1.964,285,2.791,291,1.627,298,1.627,305,2.368,306,1.627,324,1.627,326,2.542,390,1.663,391,1.35,392,1.964,393,1.35,412,1.35,415,0.84,416,1.44,417,1.422,419,1.143,427,2.791,428,1.35,454,2.368,455,1.627,456,2.368,461,3.975,467,2.368,502,2.315,514,3.771,522,2.791,523,3.398,524,1.627,528,1.627,532,2.791,533,3.398,534,2.368,539,3.065,540,1.627,546,2.368,551,2.791,572,1.627,575,1.627,587,2.368,600,1.627,603,1.627,609,1.627,610,1.627,611,1.627,623,1.627,635,2.048,636,2.048,637,2.048,638,2.048,639,1.627,640,2.048,641,2.048,642,2.048,643,3.857,644,2.048,645,1.627,646,2.368,647,3.513,648,2.048,649,2.048,650,2.048,651,2.048,652,2.98,653,2.048,654,3.857,655,2.048,656,2.048,657,2.048,658,2.98,659,2.98,660,2.98,661,2.98,662,2.048,663,2.048,664,2.048,665,2.98,666,2.048,667,2.048,668,2.048,669,2.048,670,2.048,671,2.048,672,2.048,673,3.513,674,2.048,675,2.048,676,2.98,677,3.513,678,2.048,679,2.048,680,2.98,681,2.048,682,2.791,683,2.791,684,3.513,685,2.048,686,2.048,687,2.98,688,2.048,689,2.048,690,2.048,691,2.98,692,2.98,693,2.98,694,2.98,695,2.048,696,2.048,697,2.048,698,2.048,699,2.048,700,2.048,701,2.048,702,2.048,703,2.048,704,2.048,705,2.98,706,2.048,707,2.048,708,2.048,709,2.048,710,2.048,711,3.857,712,2.048,713,2.048,714,2.048,715,2.048,716,2.048,717,2.048,718,2.048,719,2.048,720,2.048,721,2.048,722,2.048,723,2.048,724,2.048,725,2.048,726,2.048,727,2.048,728,2.048,729,2.048,730,2.048,731,2.048,732,2.048,733,2.048,734,2.048,735,2.048]],["title/license.html",[231,0.916,331,1.246,553,1.472]],["body/license.html",[4,0.512,26,0.048,47,0.048,48,0.048,64,1.945,77,1.945,107,1.429,142,0.924,211,1.053,335,1.945,351,2.77,377,2.77,462,2.77,507,2.77,553,2.298,639,2.77,645,2.77,646,2.77,736,4.258,737,4.597,738,3.487,739,3.487,740,3.487,741,4.258,742,3.487,743,3.487,744,3.487,745,3.487,746,4.258,747,3.487,748,4.787,749,5.142,750,3.487,751,3.487,752,4.258,753,4.597,754,3.487,755,4.597,756,4.258,757,3.487,758,3.487,759,3.487,760,3.487,761,3.487,762,3.487,763,3.487,764,3.487,765,3.487,766,3.487,767,4.258,768,4.258,769,3.487,770,4.258,771,3.487,772,3.487,773,3.487,774,3.487,775,3.487,776,3.487,777,3.487,778,3.487,779,3.487,780,3.487,781,3.487,782,3.487,783,3.487,784,3.487,785,3.487,786,3.487,787,3.487,788,3.487]],["title/modules.html",[415,1.462]],["body/modules.html",[26,0.053,47,0.053,48,0.053,91,1.682,215,1.958,415,1.682,416,1.682,789,4.104,790,4.104]],["title/overview.html",[791,2.834]],["body/overview.html",[0,0.436,10,0.679,26,0.058,40,0.552,47,0.051,48,0.051,49,1.543,58,0.679,102,1.543,152,1.326,211,1.136,326,2.938,335,2.099,388,2.865,415,1.827,416,2.121,417,1.796,418,2.99,419,2.099,420,2.99,421,2.99,422,2.99,423,2.865,424,3.541,682,3.541,683,2.99,791,2.99]],["title/miscellaneous/typealiases.html",[624,1.246,792,3.171]],["body/miscellaneous/typealiases.html",[14,0.715,26,0.058,28,1.183,32,1.021,47,0.052,48,0.052,51,1.627,52,2.194,67,2.214,68,2.214,69,1.893,70,2.214,71,2.709,72,1.627,73,2.214,74,2.214,624,2.214,628,3.152,793,3.968]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":302,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["0.045",{"_index":700,"title":{},"body":{"index.html":{}}}],["0.2",{"_index":374,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["0.355",{"_index":701,"title":{},"body":{"index.html":{}}}],["0.9",{"_index":365,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["03",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["061c648",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":314,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["1",{"_index":326,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["141e133",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":682,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["2.0.2",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["2.0.3",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["2016",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["2018",{"_index":507,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["22",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":683,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.0",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":643,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":623,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["5",{"_index":684,"title":{},"body":{"index.html":{}}}],["50",{"_index":575,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["5000",{"_index":697,"title":{},"body":{"index.html":{}}}],["504499b",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["54c8a0a",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":524,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["600",{"_index":319,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["6fac32b",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["7b3c816",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["_config",{"_index":398,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["_config(valu",{"_index":410,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["_initconfig",{"_index":19,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["_initconfig(valu",{"_index":31,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["_window",{"_index":501,"title":{},"body":{"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["a3c64cc",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["abov",{"_index":645,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":41,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["abstractngsrevealdirect",{"_index":1,"title":{"classes/AbstractNgsRevealDirective.html":{}},"body":{"classes/AbstractNgsRevealDirective.html":{},"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["accept",{"_index":333,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["accessor",{"_index":397,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{},"injectables/WindowService.html":{}}}],["accident",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":639,"title":{},"body":{"index.html":{},"license.html":{}}}],["activ",{"_index":382,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["actual",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["ad",{"_index":133,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["add",{"_index":390,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{},"changelog.html":{},"index.html":{}}}],["address",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["adjust",{"_index":656,"title":{},"body":{"index.html":{}}}],["affect",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["afterreset",{"_index":190,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["afterresetsourc",{"_index":183,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["afterrev",{"_index":188,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["afterrevealsourc",{"_index":181,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["aid",{"_index":386,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["alias",{"_index":793,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["alway",{"_index":369,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["amd",{"_index":668,"title":{},"body":{"index.html":{}}}],["and(predicate1",{"_index":630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["and/or",{"_index":762,"title":{},"body":{"license.html":{}}}],["angular",{"_index":523,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular.json",{"_index":651,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":431,"title":{},"body":{"modules/NgsRevealModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":60,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"dependencies.html":{},"index.html":{}}}],["anim",{"_index":103,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["anyway",{"_index":169,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["app",{"_index":162,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["app.component.html",{"_index":692,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":694,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":539,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appli",{"_index":140,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["applic",{"_index":266,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"changelog.html":{},"index.html":{}}}],["appmodul",{"_index":540,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appropri",{"_index":129,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["argument",{"_index":130,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["aris",{"_index":787,"title":{},"body":{"license.html":{}}}],["array",{"_index":74,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/typealiases.html":{}}}],["assign",{"_index":372,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["associ",{"_index":750,"title":{},"body":{"license.html":{}}}],["asyn",{"_index":145,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["asynchron",{"_index":114,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["attach",{"_index":138,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["attribut",{"_index":456,"title":{},"body":{"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["author",{"_index":778,"title":{},"body":{"license.html":{}}}],["avail",{"_index":168,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["awar",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["b708dec",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["b8b56d0",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":9,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["basic",{"_index":75,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["be",{"_index":347,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["befor",{"_index":186,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{}}}],["before/aft",{"_index":703,"title":{},"body":{"index.html":{}}}],["beforereset",{"_index":189,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["beforeresetsourc",{"_index":182,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["beforerev",{"_index":187,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["beforerevealsourc",{"_index":180,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["begin",{"_index":306,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{}}}],["behavior",{"_index":117,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["between",{"_index":330,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["bezier(0.5",{"_index":325,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["bezier(0.645",{"_index":699,"title":{},"body":{"index.html":{}}}],["bind",{"_index":301,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["boolean",{"_index":87,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["bootstrap",{"_index":419,"title":{},"body":{"modules/NgsRevealModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["bottom",{"_index":348,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["boundari",{"_index":383,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["break",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["bring",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":790,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":91,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"modules.html":{}}}],["bug",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":600,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["built",{"_index":731,"title":{},"body":{"index.html":{}}}],["bundl",{"_index":610,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":738,"title":{},"body":{"license.html":{}}}],["calcul",{"_index":384,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["call",{"_index":123,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["callback",{"_index":217,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["captur",{"_index":131,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["case",{"_index":112,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["ccfcec2",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["chang",{"_index":308,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"directives/NgsRevealSetDirective.html":{},"changelog.html":{}}}],["changelog",{"_index":505,"title":{"changelog.html":{}},"body":{}}],["changes[ngssyncprop].currentvalu",{"_index":488,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["changes[ngssyncprop].isfirstchang",{"_index":487,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["charg",{"_index":745,"title":{},"body":{"license.html":{}}}],["child",{"_index":242,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["chore",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":781,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractNgsRevealDirective.html":{}},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["clean",{"_index":490,"title":{},"body":{"interfaces/NgsScrollReveal.html":{}}}],["clean(target",{"_index":120,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["cleanup",{"_index":267,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["clear",{"_index":124,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["cli",{"_index":587,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["close",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["cluster_ngsrevealmodul",{"_index":420,"title":{},"body":{"modules/NgsRevealModule.html":{},"overview.html":{}}}],["cluster_ngsrevealmodule_declar",{"_index":421,"title":{},"body":{"modules/NgsRevealModule.html":{},"overview.html":{}}}],["cluster_ngsrevealmodule_export",{"_index":422,"title":{},"body":{"modules/NgsRevealModule.html":{},"overview.html":{}}}],["code",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":354,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["comma",{"_index":246,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["commerci",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["common.direct",{"_index":406,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["common.directive.t",{"_index":7,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["common.directive.ts:13",{"_index":33,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["common.directive.ts:9",{"_index":24,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["commonmodul",{"_index":430,"title":{},"body":{"modules/NgsRevealModule.html":{}}}],["compat",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["complet",{"_index":104,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["completion.callback",{"_index":286,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["compon",{"_index":263,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{}}}],["compos",{"_index":674,"title":{},"body":{"index.html":{}}}],["concret",{"_index":12,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["condit",{"_index":766,"title":{},"body":{"license.html":{}}}],["config",{"_index":16,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["config.contain",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["config.dur",{"_index":696,"title":{},"body":{"index.html":{}}}],["config.eas",{"_index":698,"title":{},"body":{"index.html":{}}}],["config.t",{"_index":262,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:102",{"_index":379,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:111",{"_index":292,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:115",{"_index":287,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:119",{"_index":289,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:123",{"_index":282,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:23",{"_index":303,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:27",{"_index":315,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:31",{"_index":320,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:36",{"_index":327,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:40",{"_index":338,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:44",{"_index":343,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:48",{"_index":352,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:52",{"_index":363,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:56",{"_index":366,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:66",{"_index":295,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:71",{"_index":296,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:75",{"_index":311,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:79",{"_index":341,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:84",{"_index":355,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:92",{"_index":371,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["config.ts:96",{"_index":375,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["configur",{"_index":212,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["conform",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":788,"title":{},"body":{"license.html":{}}}],["consent",{"_index":210,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["consid",{"_index":259,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{}}}],["consol",{"_index":81,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["console.error(`[ngx",{"_index":482,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["console.log(`afterreset",{"_index":720,"title":{},"body":{"index.html":{}}}],["console.log(`afterrev",{"_index":714,"title":{},"body":{"index.html":{}}}],["console.log(`beforereset",{"_index":717,"title":{},"body":{"index.html":{}}}],["console.log(`beforerev",{"_index":710,"title":{},"body":{"index.html":{}}}],["const",{"_index":256,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{}}}],["constructor(config",{"_index":191,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["constructor(elementref",{"_index":399,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["constructor(ngsrevealservic",{"_index":21,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["constructor(priv",{"_index":412,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["constructor(protect",{"_index":42,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["contain",{"_index":268,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"directives/NgsRevealSetDirective.html":{}}}],["contract",{"_index":784,"title":{},"body":{"license.html":{}}}],["control",{"_index":76,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["cooki",{"_index":209,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["copi",{"_index":748,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":737,"title":{},"body":{"license.html":{}}}],["core",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["creat",{"_index":95,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["credit",{"_index":730,"title":{},"body":{"index.html":{}}}],["css",{"_index":245,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["cubic",{"_index":324,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{}}}],["current",{"_index":99,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["custom",{"_index":235,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["damag",{"_index":782,"title":{},"body":{"license.html":{}}}],["deal",{"_index":752,"title":{},"body":{"license.html":{}}}],["debug",{"_index":86,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["declar",{"_index":152,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":151,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["defin",{"_index":23,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["delay",{"_index":269,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["deleg",{"_index":156,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["demo",{"_index":572,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["depend",{"_index":417,"title":{"dependencies.html":{}},"body":{"modules/NgsRevealModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":8,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["desktop",{"_index":270,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["destroy",{"_index":126,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["determin",{"_index":299,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["direct",{"_index":10,"title":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{},"overview.html":{}}}],["directives/index",{"_index":433,"title":{},"body":{"modules/NgsRevealModule.html":{}}}],["disabl",{"_index":90,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["distanc",{"_index":271,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["distribut",{"_index":760,"title":{},"body":{"license.html":{}}}],["document",{"_index":751,"title":{},"body":{"license.html":{}}}],["dom",{"_index":134,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["durat",{"_index":272,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["e.g",{"_index":146,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["each",{"_index":340,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["eas",{"_index":273,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["easili",{"_index":636,"title":{},"body":{"index.html":{}}}],["edit",{"_index":650,"title":{},"body":{"index.html":{}}}],["effect",{"_index":122,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["el",{"_index":220,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["el.classnam",{"_index":711,"title":{},"body":{"index.html":{}}}],["element",{"_index":106,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["element(",{"_index":137,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["elementref",{"_index":59,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["elementref.nativeel",{"_index":237,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["element’",{"_index":689,"title":{},"body":{"index.html":{}}}],["elemnt",{"_index":251,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["em",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["enables/dis",{"_index":313,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["encaspul",{"_index":241,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["end",{"_index":332,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["enter",{"_index":358,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["enter/leav",{"_index":637,"title":{},"body":{"index.html":{}}}],["etc",{"_index":337,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["event",{"_index":107,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{},"license.html":{}}}],["exampl",{"_index":690,"title":{},"body":{"index.html":{}}}],["expands/contract",{"_index":381,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["export",{"_index":40,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":772,"title":{},"body":{"license.html":{}}}],["extend",{"_index":407,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["f4c4d1a",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":294,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["far",{"_index":317,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["featur",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["fire",{"_index":284,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["first",{"_index":373,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["fit",{"_index":775,"title":{},"body":{"license.html":{}}}],["fix",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["follow",{"_index":462,"title":{},"body":{"directives/NgsRevealSetDirective.html":{},"license.html":{}}}],["format",{"_index":667,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":744,"title":{},"body":{"license.html":{}}}],["function",{"_index":149,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["furnish",{"_index":765,"title":{},"body":{"license.html":{}}}],["gener",{"_index":109,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["get",{"_index":231,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["getconfig",{"_index":232,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["getnativewindow",{"_index":499,"title":{},"body":{"injectables/WindowService.html":{}}}],["ghpage",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":463,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["global",{"_index":502,"title":{},"body":{"injectables/WindowService.html":{},"changelog.html":{},"index.html":{}}}],["gpl",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":743,"title":{},"body":{"license.html":{}}}],["great",{"_index":735,"title":{},"body":{"index.html":{}}}],["guidelin",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["happi",{"_index":605,"title":{},"body":{"changelog.html":{}}}],["help",{"_index":79,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["helpers.t",{"_index":627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":702,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":742,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":402,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["higher",{"_index":528,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["holder",{"_index":779,"title":{},"body":{"license.html":{}}}],["hook",{"_index":218,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["hostbind",{"_index":395,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["hostbinding('style.vis",{"_index":408,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["htmlcollect",{"_index":73,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/typealiases.html":{}}}],["htmlelement",{"_index":72,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["https://scrollrevealjs.org/assets/viewoffset.png",{"_index":387,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["https://tinesoft.github.io/ngx",{"_index":640,"title":{},"body":{"index.html":{}}}],["i.",{"_index":161,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["identifi",{"_index":248,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["igorminar",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":391,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["impli",{"_index":773,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{}}}],["improv",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":755,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["index.html",{"_index":669,"title":{},"body":{"index.html":{}}}],["indic",{"_index":54,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{}}}],["init",{"_index":228,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["init(config",{"_index":213,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["initi",{"_index":208,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["inject",{"_index":58,"title":{"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"injectables/WindowService.html":{}},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["input",{"_index":394,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["input('ngsrev",{"_index":409,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["input('ngsrevealset",{"_index":478,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["insid",{"_index":685,"title":{},"body":{"index.html":{}}}],["instal",{"_index":533,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanc",{"_index":94,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/functions.html":{}}}],["instanti",{"_index":88,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["instead",{"_index":150,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/functions.html":{}}}],["interact",{"_index":497,"title":{},"body":{"injectables/WindowService.html":{}}}],["interfac",{"_index":49,"title":{"interfaces/NgsHasScrollReveal.html":{},"interfaces/NgsScrollReveal.html":{}},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"overview.html":{}}}],["intern",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["interv",{"_index":249,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["interval(in",{"_index":464,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["invok",{"_index":127,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["issupport",{"_index":148,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["it'",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":461,"title":{},"body":{"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["javascript",{"_index":635,"title":{},"body":{"index.html":{}}}],["js",{"_index":155,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["json.parse(valu",{"_index":45,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["julian",{"_index":732,"title":{},"body":{"index.html":{}}}],["kind",{"_index":771,"title":{},"body":{"license.html":{}}}],["kondo",{"_index":740,"title":{},"body":{"license.html":{}}}],["latest",{"_index":642,"title":{},"body":{"index.html":{}}}],["leak",{"_index":725,"title":{},"body":{"index.html":{}}}],["leav",{"_index":357,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["left",{"_index":349,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["legend",{"_index":418,"title":{},"body":{"modules/NgsRevealModule.html":{},"overview.html":{}}}],["level",{"_index":679,"title":{},"body":{"index.html":{}}}],["liabil",{"_index":783,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":780,"title":{},"body":{"license.html":{}}}],["librari",{"_index":178,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["licens",{"_index":553,"title":{"license.html":{}},"body":{"changelog.html":{},"license.html":{}}}],["limit",{"_index":756,"title":{},"body":{"license.html":{}}}],["linear",{"_index":336,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["link",{"_index":176,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["list",{"_index":244,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["listen",{"_index":108,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["liter",{"_index":474,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["lloyd",{"_index":733,"title":{},"body":{"index.html":{}}}],["load",{"_index":100,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["loader",{"_index":661,"title":{},"body":{"index.html":{}}}],["long",{"_index":322,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["longer",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":662,"title":{},"body":{"index.html":{}}}],["magic",{"_index":172,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["main",{"_index":427,"title":{},"body":{"modules/NgsRevealModule.html":{},"index.html":{}}}],["make",{"_index":603,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["maker",{"_index":173,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["manag",{"_index":139,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["manipul",{"_index":159,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["map",{"_index":658,"title":{},"body":{"index.html":{}}}],["marker",{"_index":53,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["match",{"_index":48,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["meant",{"_index":457,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["memori",{"_index":724,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":774,"title":{},"body":{"license.html":{}}}],["merg",{"_index":758,"title":{},"body":{"license.html":{}}}],["messag",{"_index":80,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["meta",{"_index":665,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":111,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["method",{"_index":17,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["migrat",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["millisecond",{"_index":250,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["miscellan",{"_index":624,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":736,"title":{},"body":{"license.html":{}}}],["mobil",{"_index":274,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["modifi",{"_index":757,"title":{},"body":{"license.html":{}}}],["modul",{"_index":415,"title":{"modules/NgsRevealModule.html":{},"modules.html":{}},"body":{"modules/NgsRevealModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":429,"title":{},"body":{"modules/NgsRevealModule.html":{}}}],["move",{"_index":318,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"changelog.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["nativ",{"_index":503,"title":{},"body":{"injectables/WindowService.html":{}}}],["nativewindow",{"_index":498,"title":{},"body":{"injectables/WindowService.html":{}}}],["necessari",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":522,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["never",{"_index":310,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["new",{"_index":132,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{}}}],["newli",{"_index":143,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["next",{"_index":688,"title":{},"body":{"index.html":{}}}],["ng",{"_index":61,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["ng2",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["ngmodul",{"_index":428,"title":{},"body":{"modules/NgsRevealModule.html":{},"changelog.html":{},"index.html":{}}}],["ngonchang",{"_index":468,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["ngonchanges(chang",{"_index":473,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["ngondestroy",{"_index":721,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":393,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["ngshasscrollrev",{"_index":50,"title":{"interfaces/NgsHasScrollReveal.html":{}},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["ngsinterv",{"_index":460,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["ngsreveal",{"_index":265,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"index.html":{}}}],["ngsrevealconfig",{"_index":30,"title":{"injectables/NgsRevealConfig.html":{}},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["ngsrevealdirect",{"_index":388,"title":{"directives/NgsRevealDirective.html":{}},"body":{"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"overview.html":{}}}],["ngsrevealinterv",{"_index":686,"title":{},"body":{"index.html":{}}}],["ngsrevealmodul",{"_index":416,"title":{"modules/NgsRevealModule.html":{}},"body":{"modules/NgsRevealModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngsrevealmodule.forroot",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["ngsrevealservic",{"_index":22,"title":{"injectables/NgsRevealService.html":{}},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["ngsrevealset",{"_index":467,"title":{},"body":{"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["ngsrevealsetdirect",{"_index":423,"title":{"directives/NgsRevealSetDirective.html":{}},"body":{"modules/NgsRevealModule.html":{},"directives/NgsRevealSetDirective.html":{},"overview.html":{}}}],["ngsrevealtarget",{"_index":71,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/typealiases.html":{}}}],["ngsscrollrev",{"_index":57,"title":{"interfaces/NgsScrollReveal.html":{}},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["ngsselector",{"_index":455,"title":{},"body":{"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["ngssync",{"_index":465,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["ngssyncprop",{"_index":486,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["ngx",{"_index":514,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["node",{"_index":459,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["node_modules/ngx",{"_index":663,"title":{},"body":{"index.html":{}}}],["node_modules/scrollreveal/dist/scrollreveal.j",{"_index":653,"title":{},"body":{"index.html":{}}}],["node_modules/scrollreveal/dist/scrollreveal.min.j",{"_index":666,"title":{},"body":{"index.html":{}}}],["non",{"_index":92,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["noninfring",{"_index":777,"title":{},"body":{"license.html":{}}}],["noop",{"_index":96,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["not(pred",{"_index":633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["note",{"_index":647,"title":{},"body":{"index.html":{}}}],["note:if",{"_index":655,"title":{},"body":{"index.html":{}}}],["noth",{"_index":167,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["notic",{"_index":767,"title":{},"body":{"license.html":{}}}],["notifi",{"_index":185,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["now",{"_index":546,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["npm",{"_index":532,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["number",{"_index":254,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["object",{"_index":46,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["objet",{"_index":174,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["observ",{"_index":65,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["obtain",{"_index":747,"title":{},"body":{"license.html":{}}}],["occur",{"_index":84,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["onc",{"_index":359,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["onchang",{"_index":466,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["ondestroy",{"_index":705,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":392,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["onload",{"_index":370,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["opac",{"_index":275,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["open",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["oper",{"_index":93,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["option",{"_index":29,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["optionb",{"_index":141,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["options.afterreset",{"_index":283,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.afterrev",{"_index":288,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.beforereset",{"_index":290,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.beforerev",{"_index":293,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.contain",{"_index":297,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.delay",{"_index":304,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.desktop",{"_index":312,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.dist",{"_index":316,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"changelog.html":{}}}],["options.dur",{"_index":321,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.eas",{"_index":328,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.interv",{"_index":339,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.mobil",{"_index":342,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.opac",{"_index":344,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.origin",{"_index":353,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.reset",{"_index":309,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.rot",{"_index":364,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.scal",{"_index":367,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.usedelay",{"_index":307,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.viewfactor",{"_index":376,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["options.viewoffset",{"_index":380,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["order",{"_index":264,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{}}}],["origin",{"_index":276,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["otherwis",{"_index":786,"title":{},"body":{"license.html":{}}}],["out",{"_index":335,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"modules/NgsRevealModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":78,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["overrid",{"_index":678,"title":{},"body":{"index.html":{}}}],["overview",{"_index":791,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":531,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["package.son",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":101,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["param",{"_index":118,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["paramet",{"_index":25,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":240,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["parentelementref",{"_index":239,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["parentelementref.nativeel",{"_index":255,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["particular",{"_index":646,"title":{},"body":{"index.html":{},"license.html":{}}}],["pass",{"_index":69,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["peerdepend",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["permiss",{"_index":741,"title":{},"body":{"license.html":{}}}],["permit",{"_index":764,"title":{},"body":{"license.html":{}}}],["person",{"_index":746,"title":{},"body":{"license.html":{}}}],["place",{"_index":458,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["point",{"_index":657,"title":{},"body":{"index.html":{}}}],["portion",{"_index":377,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"license.html":{}}}],["posit",{"_index":356,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["possibl",{"_index":160,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["predic",{"_index":634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["predicate1",{"_index":632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["predicate2",{"_index":631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prevent",{"_index":723,"title":{},"body":{"index.html":{}}}],["previou",{"_index":128,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["prior",{"_index":346,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["privat",{"_index":179,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["project",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["properli",{"_index":649,"title":{},"body":{"index.html":{}}}],["properti",{"_index":15,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["propertynam",{"_index":485,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["protect",{"_index":18,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["provid",{"_index":211,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":170,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{}}}],["publish",{"_index":759,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":776,"title":{},"body":{"license.html":{}}}],["px",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":707,"title":{},"body":{"index.html":{}}}],["refactor",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":234,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["regist",{"_index":136,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["relat",{"_index":119,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["relax",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["remov",{"_index":105,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{}}}],["renam",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["replac",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["repres",{"_index":67,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/typealiases.html":{}}}],["requir",{"_index":551,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["reset",{"_index":102,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"overview.html":{}}}],["restrict",{"_index":754,"title":{},"body":{"license.html":{}}}],["result",{"_index":47,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":35,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["reveal",{"_index":6,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["reveal(elementref",{"_index":236,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["reveal(target",{"_index":147,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["reveal.directive.t",{"_index":389,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["reveal.directive.ts:15",{"_index":403,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["reveal.directive.ts:21",{"_index":401,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["reveal.directive.ts:23",{"_index":400,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["reveal.directive.ts:29",{"_index":404,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["reveal.module.t",{"_index":426,"title":{},"body":{"modules/NgsRevealModule.html":{}}}],["reveal.servic",{"_index":39,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["reveal.service.t",{"_index":52,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["reveal.service.ts:103",{"_index":446,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:107",{"_index":435,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:130",{"_index":438,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:148",{"_index":437,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:157",{"_index":439,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:170",{"_index":441,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:180",{"_index":442,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:189",{"_index":436,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:33",{"_index":491,"title":{},"body":{"interfaces/NgsScrollReveal.html":{}}}],["reveal.service.ts:37",{"_index":492,"title":{},"body":{"interfaces/NgsScrollReveal.html":{}}}],["reveal.service.ts:41",{"_index":495,"title":{},"body":{"interfaces/NgsScrollReveal.html":{}}}],["reveal.service.ts:49",{"_index":494,"title":{},"body":{"interfaces/NgsScrollReveal.html":{}}}],["reveal.service.ts:51",{"_index":493,"title":{},"body":{"interfaces/NgsScrollReveal.html":{}}}],["reveal.service.ts:79",{"_index":451,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:82",{"_index":452,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:83",{"_index":450,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:87",{"_index":449,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:88",{"_index":445,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:89",{"_index":447,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:90",{"_index":443,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:95",{"_index":448,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal.service.ts:99",{"_index":444,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["reveal/hid",{"_index":676,"title":{},"body":{"index.html":{}}}],["revealed/hidden",{"_index":681,"title":{},"body":{"index.html":{}}}],["revealed/reset",{"_index":704,"title":{},"body":{"index.html":{}}}],["revealservic",{"_index":706,"title":{},"body":{"index.html":{}}}],["revealset",{"_index":434,"title":{},"body":{"injectables/NgsRevealService.html":{}}}],["revealset(parentelementref",{"_index":253,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["revers",{"_index":121,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["right",{"_index":351,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"license.html":{}}}],["root",{"_index":171,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"index.html":{}}}],["rotat",{"_index":277,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["run",{"_index":163,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["runtim",{"_index":85,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["rxj",{"_index":66,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["same",{"_index":680,"title":{},"body":{"index.html":{}}}],["save",{"_index":534,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scale",{"_index":278,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["scope",{"_index":175,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["script",{"_index":652,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":677,"title":{},"body":{"index.html":{}}}],["scrollrev",{"_index":13,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["scrollreveal'",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["scrollreveal';aft",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["scrollreveal';import",{"_index":672,"title":{},"body":{"index.html":{}}}],["scrollreveal().rev",{"_index":70,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/typealiases.html":{}}}],["scrollreveal(config",{"_index":230,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["scrollreveal(opt",{"_index":153,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/functions.html":{}}}],["scrollreveal.j",{"_index":177,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["scrollreveal.min.j",{"_index":611,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scrollreveal.umd.j",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["scrollreveal/bundles/ngx",{"_index":664,"title":{},"body":{"index.html":{}}}],["scrollrevealonc",{"_index":671,"title":{},"body":{"index.html":{}}}],["selector",{"_index":243,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["sell",{"_index":763,"title":{},"body":{"license.html":{}}}],["separ",{"_index":247,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["sequenc",{"_index":115,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["sequenti",{"_index":252,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["server",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["servic",{"_index":154,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{},"index.html":{}}}],["services/index",{"_index":432,"title":{},"body":{"modules/NgsRevealModule.html":{}}}],["services/ng",{"_index":38,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["set",{"_index":216,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["set.directive.t",{"_index":453,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["set.directive.ts:23",{"_index":471,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["set.directive.ts:31",{"_index":472,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["set.directive.ts:37",{"_index":470,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["set.directive.ts:43",{"_index":469,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["set.directive.ts:49",{"_index":476,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["set.directive.ts:58",{"_index":475,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["set_config(valu",{"_index":405,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["shall",{"_index":768,"title":{},"body":{"license.html":{}}}],["share",{"_index":11,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{}}}],["side",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["simplechang",{"_index":477,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["simpli",{"_index":166,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["singl",{"_index":233,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["size",{"_index":368,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["softwar",{"_index":749,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{},"changelog.html":{}}}],["specifi",{"_index":345,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["sr",{"_index":158,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["src/.../ng",{"_index":628,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../test",{"_index":626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../window.service.t",{"_index":625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/directives/ng",{"_index":5,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["src/ng",{"_index":425,"title":{},"body":{"modules/NgsRevealModule.html":{}}}],["src/services/ng",{"_index":51,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/services/window.service.t",{"_index":496,"title":{},"body":{"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["src/services/window.service.ts:11",{"_index":500,"title":{},"body":{"injectables/WindowService.html":{}}}],["src/test",{"_index":629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["start",{"_index":331,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/NgsRevealConfig.html":{}}}],["store",{"_index":125,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["stream",{"_index":196,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["style",{"_index":110,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["style.vis",{"_index":396,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["styleurl",{"_index":693,"title":{},"body":{"index.html":{}}}],["subject",{"_index":64,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"license.html":{}}}],["sublicens",{"_index":761,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":184,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["substanti",{"_index":769,"title":{},"body":{"license.html":{}}}],["such",{"_index":113,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["super(ngsrevealservic",{"_index":413,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["support",{"_index":215,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"modules.html":{}}}],["sure",{"_index":648,"title":{},"body":{"index.html":{}}}],["svg",{"_index":789,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":135,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["synchron",{"_index":258,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["system",{"_index":660,"title":{},"body":{"index.html":{}}}],["systemj",{"_index":654,"title":{},"body":{"index.html":{}}}],["tag",{"_index":670,"title":{},"body":{"index.html":{}}}],["take",{"_index":323,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["target",{"_index":68,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/typealiases.html":{}}}],["tell",{"_index":659,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":691,"title":{},"body":{"index.html":{}}}],["test",{"_index":644,"title":{},"body":{"index.html":{}}}],["thank",{"_index":734,"title":{},"body":{"index.html":{}}}],["thing",{"_index":83,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this._initconfig(valu",{"_index":411,"title":{},"body":{"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{}}}],["this.afterreset",{"_index":203,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.afterresetsourc",{"_index":195,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.afterresetsource.asobserv",{"_index":204,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.afterresetsource.next(el",{"_index":227,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.afterresetsubscript",{"_index":718,"title":{},"body":{"index.html":{}}}],["this.afterresetsubscription.unsubscrib",{"_index":729,"title":{},"body":{"index.html":{}}}],["this.afterrev",{"_index":199,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.afterrevealsourc",{"_index":193,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.afterrevealsource.asobserv",{"_index":200,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.afterrevealsource.next(el",{"_index":223,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.afterrevealsubscript",{"_index":712,"title":{},"body":{"index.html":{}}}],["this.afterrevealsubscription.unsubscrib",{"_index":727,"title":{},"body":{"index.html":{}}}],["this.beforereset",{"_index":201,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.beforeresetsourc",{"_index":194,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.beforeresetsource.asobserv",{"_index":202,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.beforeresetsource.next(el",{"_index":225,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.beforeresetsubscript",{"_index":715,"title":{},"body":{"index.html":{}}}],["this.beforeresetsubscription.unsubscrib",{"_index":728,"title":{},"body":{"index.html":{}}}],["this.beforerev",{"_index":197,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.beforerevealsourc",{"_index":192,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.beforerevealsource.asobserv",{"_index":198,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.beforerevealsource.next(el",{"_index":221,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.beforerevealsubscript",{"_index":708,"title":{},"body":{"index.html":{}}}],["this.beforerevealsubscription.unsubscrib",{"_index":726,"title":{},"body":{"index.html":{}}}],["this.config",{"_index":44,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.config.afterreset",{"_index":226,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.config.afterrev",{"_index":222,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.config.beforereset",{"_index":224,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.config.beforerev",{"_index":219,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.elementref.nativeel",{"_index":480,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["this.elementref.nativeelement.classnam",{"_index":481,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["this.init(config",{"_index":207,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.ngsinterv",{"_index":484,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["this.ngsrevealservice.reveal(this.elementref",{"_index":414,"title":{},"body":{"directives/NgsRevealDirective.html":{}}}],["this.ngsrevealservice.revealset(this.elementref",{"_index":483,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["this.ngsrevealservice.sync",{"_index":489,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["this.ngsselector",{"_index":479,"title":{},"body":{"directives/NgsRevealSetDirective.html":{}}}],["this.revealservice.afterreset$.subscrib",{"_index":719,"title":{},"body":{"index.html":{}}}],["this.revealservice.afterreveal$.subscrib",{"_index":713,"title":{},"body":{"index.html":{}}}],["this.revealservice.beforereset$.subscrib",{"_index":716,"title":{},"body":{"index.html":{}}}],["this.revealservice.beforereveal$.subscrib",{"_index":709,"title":{},"body":{"index.html":{}}}],["this.sr",{"_index":229,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.sr.destroy",{"_index":261,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.sr.reveal(elementref.nativeel",{"_index":238,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.sr.reveal(selector",{"_index":257,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.sr.sync",{"_index":260,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["this.window",{"_index":205,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["through",{"_index":144,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["time",{"_index":305,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{}}}],["tine",{"_index":739,"title":{},"body":{"license.html":{}}}],["tool",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":350,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["tort",{"_index":785,"title":{},"body":{"license.html":{}}}],["transit",{"_index":329,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["tree",{"_index":695,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":291,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{}}}],["true",{"_index":97,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["two",{"_index":675,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":792,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":43,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"injectables/WindowService.html":{}}}],["types/scrollrev",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["typic",{"_index":55,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["uinvers",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["umd",{"_index":609,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["undefin",{"_index":504,"title":{},"body":{"injectables/WindowService.html":{},"miscellaneous/functions.html":{}}}],["unexpect",{"_index":82,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["univers",{"_index":214,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{}}}],["unless",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["unsubscrib",{"_index":722,"title":{},"body":{"index.html":{}}}],["unsupport",{"_index":89,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["until",{"_index":687,"title":{},"body":{"index.html":{}}}],["updat",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":285,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{}}}],["us",{"_index":142,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":673,"title":{},"body":{"index.html":{}}}],["usedelay",{"_index":279,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["v2.0.0",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["v2.2.0",{"_index":641,"title":{},"body":{"index.html":{}}}],["v4.x.x",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["v6.x.x",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":334,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["valu",{"_index":34,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"directives/NgsRevealSetDirective.html":{},"changelog.html":{},"index.html":{}}}],["version",{"_index":98,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"changelog.html":{},"index.html":{}}}],["via",{"_index":454,"title":{},"body":{"directives/NgsRevealSetDirective.html":{},"index.html":{}}}],["view",{"_index":638,"title":{},"body":{"index.html":{}}}],["viewfactor",{"_index":280,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["viewoffset",{"_index":281,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["viewport",{"_index":298,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"index.html":{}}}],["visibl",{"_index":300,"title":{},"body":{"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{}}}],["visual",{"_index":385,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["void",{"_index":36,"title":{},"body":{"classes/AbstractNgsRevealDirective.html":{},"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"directives/NgsRevealDirective.html":{},"injectables/NgsRevealService.html":{},"directives/NgsRevealSetDirective.html":{},"interfaces/NgsScrollReveal.html":{}}}],["want",{"_index":116,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealConfig.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["warranti",{"_index":770,"title":{},"body":{"license.html":{}}}],["way",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":164,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["whether",{"_index":77,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"license.html":{}}}],["window",{"_index":56,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{}}}],["window.servic",{"_index":63,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["windowservic",{"_index":62,"title":{"injectables/WindowService.html":{}},"body":{"interfaces/NgsHasScrollReveal.html":{},"modules/NgsRevealModule.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"injectables/WindowService.html":{}}}],["windowservice.nativewindow",{"_index":206,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["within",{"_index":378,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["without",{"_index":753,"title":{},"body":{"license.html":{}}}],["work",{"_index":157,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"index.html":{}}}],["worker",{"_index":165,"title":{},"body":{"interfaces/NgsHasScrollReveal.html":{},"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{}}}],["x",{"_index":360,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["y",{"_index":361,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["ye",{"_index":440,"title":{},"body":{"injectables/NgsRevealService.html":{},"interfaces/NgsScrollReveal.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":362,"title":{},"body":{"injectables/NgsRevealConfig.html":{}}}],["zoom",{"_index":424,"title":{},"body":{"modules/NgsRevealModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractNgsRevealDirective.html":{"url":"classes/AbstractNgsRevealDirective.html","title":"class - AbstractNgsRevealDirective","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractNgsRevealDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/ngs-reveal-common.directive.ts\n        \n\n            \n                Description\n            \n            \n                Base directive class shared by the concrete ScrollReveal directives.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _initConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngsRevealService: NgsRevealService)\n                    \n                \n                        \n                            \n                                Defined in src/directives/ngs-reveal-common.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngsRevealService\n                                                  \n                                                        \n                                                                    NgsRevealService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     NgsRevealConfig\n\n                    \n                \n                    \n                        \n                            Type :     NgsRevealConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/directives/ngs-reveal-common.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _initConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _initConfig(value: string | NgsRevealConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/directives/ngs-reveal-common.directive.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string | NgsRevealConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { NgsRevealConfig } from '../services/ngs-reveal-config';\nimport { NgsRevealService } from '../services/ngs-reveal.service';\n\n/**\n * Base directive class shared by the concrete ScrollReveal directives.\n */\nexport abstract class AbstractNgsRevealDirective {\n\n    config: NgsRevealConfig;\n\n    constructor(protected ngsRevealService: NgsRevealService) { }\n\n    protected _initConfig(value: string | NgsRevealConfig): void {\n        if (value && typeof value === 'string') {\n            this.config = JSON.parse(value);\n        } else if (value && typeof value === 'object') {\n            this.config = value;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgsHasScrollReveal.html":{"url":"interfaces/NgsHasScrollReveal.html","title":"interface - NgsHasScrollReveal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgsHasScrollReveal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/ngs-reveal.service.ts\n        \n\n            \n                Description\n            \n            \n                Marker interface to indicate that an object (typically window) has scrollreveal property.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scrollReveal\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scrollReveal\n                                    \n                                \n                                \n                                    \n                                        scrollReveal:     NgsScrollReveal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NgsScrollReveal\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, ElementRef } from '@angular/core';\nimport { NgsRevealConfig } from './ngs-reveal-config';\nimport { WindowService } from './window.service';\nimport { Subject, Observable } from 'rxjs';\n\n/**\n * Type that represents the target that can be passed to `ScrollReveal().reveal()`.\n */\nexport type NgsRevealTarget = string | HTMLElement | HTMLCollection | Array;\n\n/**\n * Basic interface to represent `ScrollReveal` object.\n */\nexport interface NgsScrollReveal {\n  /**\n   * Controls whether or not to output help messages to the console when unexpected things occur at runtime.\n   */\n  debug?: boolean;\n  /**\n   * When `ScrollReveal` is instantiated on unsupported or disabled browsers,\n   * a non-operational instance is created with a `noop` property that returns `true`\n   */\n  noop: boolean;\n  /**\n   * Returns the version of `ScrollReveal` currently loaded on the page.\n   */\n  version?: string;\n  /**\n   * When non-resetting reveal animations complete, `ScrollReveal` will remove that elements event listeners, generated styles and metadata.\n   * In some cases (such as asynchronous sequences), you may not want this behavior.\n   * @param target the related element\n   */\n  clean(target: NgsRevealTarget): void;\n  /**\n   * Reverses the effects of all `reveal()` calls, removing all generated styles and event listeners, and clears the `ScrollReveal` store.\n   */\n  destroy(): void;\n  /**\n   * Invokes all previous `reveal()` calls (with the appropriate arguments), to capture any new elements added to the DOM.\n   */\n  sync(): void;\n  /**\n   * Registers the target element(s) with ScrollReveal, generates animation styles,\n   * and attaches event listeners to manage when styles are applied.\n   * @param target element to reveal\n   * @param options optionbs to use to reveal\n   * @param syncing whether or not to sync newly added elements (through an asyn call for e.g) with DOM\n   */\n  reveal(target: NgsRevealTarget, options?: NgsRevealConfig, syncing?: boolean): void;\n\n  isSupported(): boolean;\n}\n\n/**\n * The function that returns the `ScrollReveal` instance.\n * @param options Options to use instead of the defaults.\n */\ndeclare function ScrollReveal(options?: NgsRevealConfig): NgsScrollReveal;\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `scrollreveal` property.\n */\nexport interface NgsHasScrollReveal {\n  scrollReveal: NgsScrollReveal;\n}\n\n/**\n * Service to inject in directives to use ScrollReveal JS.\n * It delegates the work to SR, when DOM manipulation is possible (i.e app is not running in a web worker for e.g).\n * If not possible, most methods simply do nothing, as DOM elements are not available anyway.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgsRevealService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the scrollreveal.js library\n  private sr: NgsScrollReveal;\n\n  // Window Object\n  private window: Window & NgsHasScrollReveal;\n  private config: NgsRevealConfig;\n\n\n   // Observable  sources\n  private beforeRevealSource: Subject;\n  private afterRevealSource: Subject;\n  private beforeResetSource: Subject;\n  private afterResetSource: Subject;\n\n   /**\n    * Observable to subscribe to and get notified before an element is revealed.\n    */\n   beforeReveal$: Observable;\n   /**\n    * Observable to subscribe to and get notified after an element is revealed.\n    */\n   afterReveal$: Observable;\n   /**\n    * Observable to subscribe to and get notified before an element is reset.\n    */\n   beforeReset$: Observable;\n   /**\n    * Observable to subscribe to and get notified after an element is reset.\n    */\n   afterReset$: Observable;\n\n  constructor(config: NgsRevealConfig, windowService: WindowService) {\n     // Observable  sources\n     this.beforeRevealSource = new Subject();\n     this.afterRevealSource = new Subject();\n     this.beforeResetSource = new Subject();\n     this.afterResetSource = new Subject();\n\n     // Observable  streams\n    this.beforeReveal$ = this.beforeRevealSource.asObservable();\n    this.afterReveal$ = this.afterRevealSource.asObservable();\n    this.beforeReset$ = this.beforeResetSource.asObservable();\n    this.afterReset$ = this.afterResetSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgsRevealConfig): void {\n    if (this.window) {// universal support\n      this.config = config;\n\n      // Set callbacks hooks:\n      this.config.beforeReveal = (el: HTMLElement) => this.beforeRevealSource.next(el);\n      this.config.afterReveal = (el: HTMLElement) => this.afterRevealSource.next(el);\n      this.config.beforeReset = (el: HTMLElement) => this.beforeResetSource.next(el);\n      this.config.afterReset = (el: HTMLElement) => this.afterResetSource.next(el);\n\n      // init the scrollReveal library with injected config\n      this.sr = ScrollReveal(config);\n    }\n  }\n\n    /**\n   * Gets the current configuration  used by ScrollReveal.\n   */\n  getConfig(): NgsRevealConfig {\n    return this.config;\n  }\n\n  /**\n   * Method to reveal a single DOM element.\n   * @param elementRef  a reference to the element to reveal\n   * @param config      (optional) custom configuration to use when revealing this element\n   */\n  reveal(elementRef: ElementRef, config?: NgsRevealConfig): void {\n    if (this.window && elementRef.nativeElement) {\n      this.sr.reveal(elementRef.nativeElement, config);\n    }\n  }\n\n  /**\n   * Method to reveal a set of DOM elements.\n   * @param parentElementRef  the parent DOM element encaspulating the child elements to reveal\n   * @param selector          a list of CSS selectors (comma-separated) that identifies child elements to reveal\n   * @param interval          (optional) interval in milliseconds, to animate child elemnts sequentially\n   * @param config            (optional) custom configuration to use when revealing this set of elements\n   */\n  revealSet(parentElementRef: ElementRef, selector: string, interval?: number, config?: NgsRevealConfig): void {\n    if (this.window && parentElementRef.nativeElement) {\n      const options = { ...config, interval: interval};\n      this.sr.reveal(selector, options);\n    }\n  }\n\n  /**\n   * Method to synchronize and consider newly added child elements (for e.g when child elements were added asynchronously to parent DOM) .\n   */\n  sync(): void {\n    if (this.window) {// universal support\n      this.sr.sync();\n    }\n  }\n\n  /**\n   * Reverses the effects of all `reveal()` calls, removing all generated styles and event listeners, and clears the `ScrollReveal` store.\n   */\n  destroy(): void {\n    if (this.window) {\n      this.sr.destroy();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgsRevealConfig.html":{"url":"injectables/NgsRevealConfig.html","title":"injectable - NgsRevealConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgsRevealConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/ngs-reveal-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration service for the NgsScrollReveal directives.\nYou can inject this service, typically in your root component, and customize the values of its properties in\norder to provide default values for all the ngsReveal directives used in the application.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                afterReset\n                            \n                            \n                                    Optional\n                                afterReveal\n                            \n                            \n                                    Optional\n                                beforeReset\n                            \n                            \n                                    Optional\n                                beforeReveal\n                            \n                            \n                                    Optional\n                                cleanup\n                            \n                            \n                                    Optional\n                                container\n                            \n                            \n                                    Optional\n                                delay\n                            \n                            \n                                    Optional\n                                desktop\n                            \n                            \n                                    Optional\n                                distance\n                            \n                            \n                                    Optional\n                                duration\n                            \n                            \n                                    Optional\n                                easing\n                            \n                            \n                                    Optional\n                                interval\n                            \n                            \n                                    Optional\n                                mobile\n                            \n                            \n                                    Optional\n                                opacity\n                            \n                            \n                                    Optional\n                                origin\n                            \n                            \n                                    Optional\n                                reset\n                            \n                            \n                                    Optional\n                                rotate\n                            \n                            \n                                    Optional\n                                scale\n                            \n                            \n                                    Optional\n                                useDelay\n                            \n                            \n                                    Optional\n                                viewFactor\n                            \n                            \n                                    Optional\n                                viewOffset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            afterReset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afterReset:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:123\n                            \n                        \n\n                \n                    \n                        options.afterReset is a function that fires upon reset completion.Callback to call after an element is reset.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            afterReveal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afterReveal:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:115\n                            \n                        \n\n                \n                    \n                        options.afterReveal is a function that fires upon reveal completion.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            beforeReset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeReset:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:119\n                            \n                        \n\n                \n                    \n                        options.beforeReset is a function that fires when a reset is triggered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            beforeReveal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeReveal:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:111\n                            \n                        \n\n                \n                    \n                        options.beforeReveal is a function that fires when a reveal is triggered.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cleanup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cleanup:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:66\n                            \n                        \n\n                \n                    \n                        When non-resetting reveal animations complete, ScrollReveal will remove that elements event listeners,\ngenerated styles and metadata. In some cases (such as asynchronous sequences), you may not want this behavior.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     Element | string\n\n                    \n                \n                    \n                        \n                            Type :     Element | string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:71\n                            \n                        \n\n                \n                    \n                        options.container is used as the viewport, when determining element visibility.\nThis is the element that ScrollReveal binds event listeners to.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            delay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        delay:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:23\n                            \n                        \n\n                \n                    \n                        options.delay is the time before reveal animations begin.\nBy default, delay will be used for all reveal animations,\nbut options.useDelay can be used to change when delay is applied.\nHowever, animations triggered by options.reset will never use delay.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            desktop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        desktop:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:75\n                            \n                        \n\n                \n                    \n                        options.desktop enables/disables animations on desktop browsers.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            distance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distance:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '0px'\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:27\n                            \n                        \n\n                \n                    \n                        options.distance controls how far elements move when revealed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        duration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 600\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:31\n                            \n                        \n\n                \n                    \n                        options.duration controls how long animations take to complete.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            easing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        easing:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cubic-bezier(0.5, 0, 0, 1)'\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:36\n                            \n                        \n\n                \n                    \n                        options.easing controls how animations transition between their start and end values.\nAccepts any valid CSS easing, e.g. 'ease', 'ease-in-out', 'linear', etc.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            interval\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:40\n                            \n                        \n\n                \n                    \n                        options.interval is the time between each reveal.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:79\n                            \n                        \n\n                \n                    \n                        options.mobile enables/disables animations on mobile browsers.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opacity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        opacity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:44\n                            \n                        \n\n                \n                    \n                        options.opacity specifies the opacity they have prior to being revealed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     \"bottom\" | \"left\" | \"top\" | \"right\"\n\n                    \n                \n                    \n                        \n                            Type :     \"bottom\" | \"left\" | \"top\" | \"right\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'bottom'\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:48\n                            \n                        \n\n                \n                    \n                        options.origin specifies what direction elements come from when revealed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reset:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:84\n                            \n                        \n\n                \n                    \n                        options.reset enables/disables elements returning to their initialized position when they leave the viewport.\nWhen true elements reveal each time they enter the viewport instead of once.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rotate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rotate:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { x: 0, y: 0, z: 0 }\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:52\n                            \n                        \n\n                \n                    \n                        options.rotate specifies the rotation elements have prior to being revealed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            scale\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scale:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.9\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:56\n                            \n                        \n\n                \n                    \n                        options.scale specifies the size of elements have prior to being revealed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            useDelay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        useDelay:     \"always\" | \"once\" | \"onload\"\n\n                    \n                \n                    \n                        \n                            Type :     \"always\" | \"once\" | \"onload\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'always'\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:92\n                            \n                        \n\n                \n                    \n                        options.useDelay specifies when values assigned to options.delay are used.\n\n'always' — delay for all reveal animations\n'once'   — delay only the first time reveals occur\n'onload' - delay only for animations triggered by first load\n\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            viewFactor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewFactor:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0.2\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:96\n                            \n                        \n\n                \n                    \n                        options.viewFactor specifies what portion of an element must be within the viewport for it to be considered visible.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            viewOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewOffset:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { top: 0, right: 0, bottom: 0, left: 0 }\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal-config.ts:102\n                            \n                        \n\n                \n                    \n                        options.viewOffset expands/contracts the active boundaries of the viewport when calculating element visibility.\nVisual Aid: https://scrollrevealjs.org/assets/viewoffset.png\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the NgsScrollReveal directives.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ngsReveal directives used in the application.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class NgsRevealConfig {\n\n    ///////////////////////\n    // Animation options //\n    ///////////////////////\n\n    /**\n     * `options.delay` is the time before reveal animations begin.\n     * By default, delay will be used for all reveal animations,\n     * but `options.useDelay` can be used to change when delay is applied.\n     * However, animations triggered by `options.reset` will never use delay.\n     */\n    delay?= 0;\n    /**\n     * `options.distance` controls how far elements move when revealed.\n     */\n    distance?= '0px';\n    /**\n     * `options.duration` controls how long animations take to complete.\n     */\n    duration?= 600;\n    /**\n     * `options.easing` controls how animations transition between their start and end values.\n     * Accepts any valid CSS easing, e.g. 'ease', 'ease-in-out', 'linear', etc.\n     */\n    easing?= 'cubic-bezier(0.5, 0, 0, 1)';\n    /**\n     * `options.interval` is the time between each reveal.\n     */\n    interval?= 0;\n    /**\n     * `options.opacity` specifies the opacity they have prior to being revealed.\n     */\n    opacity?= 0;\n    /**\n     * `options.origin` specifies what direction elements come from when revealed.\n     */\n    origin?: 'bottom' | 'left' | 'top' | 'right' = 'bottom';\n    /**\n     * `options.rotate` specifies the rotation elements have prior to being revealed.\n     */\n    rotate?= { x: 0, y: 0, z: 0 };\n    /**\n     * `options.scale` specifies the size of elements have prior to being revealed.\n     */\n    scale?= 0.9;\n\n    ////////////////////\n    // Config options //\n    ////////////////////\n\n    /**\n     * When non-resetting reveal animations complete, `ScrollReveal` will remove that elements event listeners,\n     * generated styles and metadata. In some cases (such as asynchronous sequences), you may not want this behavior.\n     */\n    cleanup?= false;\n    /**\n     * `options.container` is used as the viewport, when determining element visibility.\n     * This is the element that ScrollReveal binds event listeners to.\n     */\n    container?: Element | string;\n    /**\n     * `options.desktop` enables/disables animations on desktop browsers.\n     */\n    desktop?= true;\n    /**\n     * `options.mobile` enables/disables animations on mobile browsers.\n     */\n    mobile?= true;\n    /**\n     * `options.reset` enables/disables elements returning to their initialized position when they leave the viewport.\n     * When true elements reveal each time they enter the viewport instead of once.\n     */\n    reset?= false;\n    /**\n     * `options.useDelay` specifies when values assigned to options.delay are used.\n     *\n     * - 'always' — delay for all reveal animations\n     * - 'once'   — delay only the first time reveals occur\n     * - 'onload' - delay only for animations triggered by first load\n     */\n    useDelay?: 'always' | 'once' | 'onload' = 'always';\n    /**\n     * `options.viewFactor` specifies what portion of an element must be within the viewport for it to be considered visible.\n     */\n    viewFactor?= 0.2;\n    /**\n     * `options.viewOffset` expands/contracts the active boundaries of the viewport when calculating element visibility.\n     *\n     * Visual Aid: https://scrollrevealjs.org/assets/viewoffset.png\n     */\n    viewOffset?= { top: 0, right: 0, bottom: 0, left: 0 };\n\n    //////////////////////\n    // Callback options //\n    //////////////////////\n\n    /**\n     * `options.beforeReveal` is a function that fires when a reveal is triggered.\n     */\n    beforeReveal?: (el: HTMLElement) => void;\n    /**\n     * `options.afterReveal` is a function that fires upon reveal completion.\n     */\n    afterReveal?: (el: HTMLElement) => void;\n    /**\n     * `options.beforeReset` is a function that fires when a reset is triggered.\n     */\n    beforeReset?: (el: HTMLElement) => void;\n    /**\n     * `options.afterReset` is a function that fires upon reset completion.Callback to call after an element is reset.\n     */\n    afterReset?: (el: HTMLElement) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgsRevealDirective.html":{"url":"directives/NgsRevealDirective.html","title":"directive - NgsRevealDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgsRevealDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/ngs-reveal.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive to add 'ScrollReveal' functionality to a single DOM element in the page.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngsReveal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngsReveal\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                style.visibility\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, ngsRevealService: NgsRevealService)\n                    \n                \n                        \n                            \n                                Defined in src/directives/ngs-reveal.directive.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngsRevealService\n                                                  \n                                                        \n                                                                    NgsRevealService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngsReveal\n                    \n                    \n                        Custom configuration to use when revealing this element\n\n                    \n                \n                        \n                            \n                                    Defined in src/directives/ngs-reveal.directive.ts:21\n                            \n                        \n            \n        \n\n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            style.visibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        style.visibility:     \n\n                    \n                \n                    \n                        \n                            Default value : 'hidden'\n                        \n                    \n                        \n                            \n                                    Defined in src/directives/ngs-reveal.directive.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/directives/ngs-reveal.directive.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _config\n                    \n                \n\n\n                \n                    \n                        set_config(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/directives/ngs-reveal.directive.ts:21\n                                \n                            \n                    \n                        \n                                Custom configuration to use when revealing this element\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, HostBinding, OnInit, ElementRef, Input } from '@angular/core';\nimport { NgsRevealConfig } from '../services/ngs-reveal-config';\nimport { NgsRevealService } from '../services/ngs-reveal.service';\nimport { AbstractNgsRevealDirective } from './ngs-reveal-common.directive';\n\n/**\n * Directive to add 'ScrollReveal' functionality to a single DOM element in the page.\n */\n@Directive({\n    selector: '[ngsReveal]'\n})\nexport class NgsRevealDirective extends AbstractNgsRevealDirective implements OnInit {\n\n    @HostBinding('style.visibility')\n    visibility = 'hidden';\n\n    /**\n     * Custom configuration to use when revealing this element\n     */\n    @Input('ngsReveal')\n    set _config(value: string | NgsRevealConfig) {\n        this._initConfig(value);\n    }\n\n    constructor(private elementRef: ElementRef, ngsRevealService: NgsRevealService) {\n        super(ngsRevealService);\n    }\n\n    ngOnInit() {\n        this.ngsRevealService.reveal(this.elementRef, this.config);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgsRevealModule.html":{"url":"modules/NgsRevealModule.html","title":"module - NgsRevealModule","body":"\n                   \n\n\n\n\n  Modules\n  NgsRevealModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgsRevealModule\n\n\n\ncluster_NgsRevealModule_declarations\n\n\n\ncluster_NgsRevealModule_exports\n\n\n\n\nNgsRevealDirective\n\nNgsRevealDirective\n\n\n\nNgsRevealModule\n\nNgsRevealModule\n\nNgsRevealModule -->\n\nNgsRevealDirective->NgsRevealModule\n\n\n\n\n\nNgsRevealSetDirective\n\nNgsRevealSetDirective\n\nNgsRevealModule -->\n\nNgsRevealSetDirective->NgsRevealModule\n\n\n\n\n\nNgsRevealDirective \n\nNgsRevealDirective \n\nNgsRevealDirective  -->\n\nNgsRevealModule->NgsRevealDirective \n\n\n\n\n\nNgsRevealSetDirective \n\nNgsRevealSetDirective \n\nNgsRevealSetDirective  -->\n\nNgsRevealModule->NgsRevealSetDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngs-reveal.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Main module of the library\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NgsRevealDirective\n                            \n                            \n                                NgsRevealSetDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NgsRevealDirective\n                            \n                            \n                                    NgsRevealSetDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WindowService, NgsRevealService, NgsRevealConfig } from './services/index';\nimport { NgsRevealDirective, NgsRevealSetDirective } from './directives/index';\n\nexport { WindowService, NgsRevealService, NgsRevealConfig } from './services/index';\n\nexport { NgsRevealDirective, NgsRevealSetDirective } from './directives/index';\n\n/**\n * Main module of the library\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [NgsRevealDirective, NgsRevealSetDirective],\n  declarations: [NgsRevealDirective, NgsRevealSetDirective]\n})\nexport class NgsRevealModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgsRevealService.html":{"url":"injectables/NgsRevealService.html","title":"injectable - NgsRevealService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgsRevealService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/ngs-reveal.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to inject in directives to use ScrollReveal JS.\nIt delegates the work to SR, when DOM manipulation is possible (i.e app is not running in a web worker for e.g).\nIf not possible, most methods simply do nothing, as DOM elements are not available anyway.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                afterReset$\n                            \n                            \n                                    Private\n                                afterResetSource\n                            \n                            \n                                afterReveal$\n                            \n                            \n                                    Private\n                                afterRevealSource\n                            \n                            \n                                beforeReset$\n                            \n                            \n                                    Private\n                                beforeResetSource\n                            \n                            \n                                beforeReveal$\n                            \n                            \n                                    Private\n                                beforeRevealSource\n                            \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                sr\n                            \n                            \n                                    Private\n                                window\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                getConfig\n                            \n                            \n                                init\n                            \n                            \n                                reveal\n                            \n                            \n                                revealSet\n                            \n                            \n                                sync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: NgsRevealConfig, windowService: WindowService)\n                    \n                \n                        \n                            \n                                Defined in src/services/ngs-reveal.service.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    NgsRevealConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowService\n                                                  \n                                                        \n                                                                    WindowService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:189\n                            \n                        \n\n\n                \n                    \n                            Reverses the effects of all reveal() calls, removing all generated styles and event listeners, and clears the ScrollReveal store.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:148\n                            \n                        \n\n\n                \n                    \n                            Gets the current configuration  used by ScrollReveal.\n\n\n                            \n                                Returns :     NgsRevealConfig\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(config: NgsRevealConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Initializes Cookie Consent with the provided configuration.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    NgsRevealConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the configuration object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reveal\n                            \n                            \n                        \n                    \n                \n                \n                    \nreveal(elementRef: ElementRef, config?: NgsRevealConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:157\n                            \n                        \n\n\n                \n                    \n                            Method to reveal a single DOM element.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                a reference to the element to reveal\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    NgsRevealConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                (optional) custom configuration to use when revealing this element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revealSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevealSet(parentElementRef: ElementRef, selector: string, interval?: number, config?: NgsRevealConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:170\n                            \n                        \n\n\n                \n                    \n                            Method to reveal a set of DOM elements.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        parentElementRef\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the parent DOM element encaspulating the child elements to reveal\n\n                                                        \n                                                \n                                                \n                                                        selector\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                a list of CSS selectors (comma-separated) that identifies child elements to reveal\n\n                                                        \n                                                \n                                                \n                                                        interval\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                (optional) interval in milliseconds, to animate child elemnts sequentially\n\n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    NgsRevealConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                (optional) custom configuration to use when revealing this set of elements\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sync\n                            \n                            \n                        \n                    \n                \n                \n                    \nsync()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:180\n                            \n                        \n\n\n                \n                    \n                            Method to synchronize and consider newly added child elements (for e.g when child elements were added asynchronously to parent DOM) .\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            afterReset$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afterReset$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:107\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified after an element is reset.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            afterResetSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afterResetSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            afterReveal$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afterReveal$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:99\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified after an element is revealed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            afterRevealSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        afterRevealSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beforeReset$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeReset$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:103\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified before an element is reset.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            beforeResetSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeResetSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beforeReveal$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeReveal$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:95\n                            \n                        \n\n                \n                    \n                        Observable to subscribe to and get notified before an element is revealed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            beforeRevealSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        beforeRevealSource:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     NgsRevealConfig\n\n                    \n                \n                    \n                        \n                            Type :     NgsRevealConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sr:     NgsScrollReveal\n\n                    \n                \n                    \n                        \n                            Type :     NgsScrollReveal\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:82\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, ElementRef } from '@angular/core';\nimport { NgsRevealConfig } from './ngs-reveal-config';\nimport { WindowService } from './window.service';\nimport { Subject, Observable } from 'rxjs';\n\n/**\n * Type that represents the target that can be passed to `ScrollReveal().reveal()`.\n */\nexport type NgsRevealTarget = string | HTMLElement | HTMLCollection | Array;\n\n/**\n * Basic interface to represent `ScrollReveal` object.\n */\nexport interface NgsScrollReveal {\n  /**\n   * Controls whether or not to output help messages to the console when unexpected things occur at runtime.\n   */\n  debug?: boolean;\n  /**\n   * When `ScrollReveal` is instantiated on unsupported or disabled browsers,\n   * a non-operational instance is created with a `noop` property that returns `true`\n   */\n  noop: boolean;\n  /**\n   * Returns the version of `ScrollReveal` currently loaded on the page.\n   */\n  version?: string;\n  /**\n   * When non-resetting reveal animations complete, `ScrollReveal` will remove that elements event listeners, generated styles and metadata.\n   * In some cases (such as asynchronous sequences), you may not want this behavior.\n   * @param target the related element\n   */\n  clean(target: NgsRevealTarget): void;\n  /**\n   * Reverses the effects of all `reveal()` calls, removing all generated styles and event listeners, and clears the `ScrollReveal` store.\n   */\n  destroy(): void;\n  /**\n   * Invokes all previous `reveal()` calls (with the appropriate arguments), to capture any new elements added to the DOM.\n   */\n  sync(): void;\n  /**\n   * Registers the target element(s) with ScrollReveal, generates animation styles,\n   * and attaches event listeners to manage when styles are applied.\n   * @param target element to reveal\n   * @param options optionbs to use to reveal\n   * @param syncing whether or not to sync newly added elements (through an asyn call for e.g) with DOM\n   */\n  reveal(target: NgsRevealTarget, options?: NgsRevealConfig, syncing?: boolean): void;\n\n  isSupported(): boolean;\n}\n\n/**\n * The function that returns the `ScrollReveal` instance.\n * @param options Options to use instead of the defaults.\n */\ndeclare function ScrollReveal(options?: NgsRevealConfig): NgsScrollReveal;\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `scrollreveal` property.\n */\nexport interface NgsHasScrollReveal {\n  scrollReveal: NgsScrollReveal;\n}\n\n/**\n * Service to inject in directives to use ScrollReveal JS.\n * It delegates the work to SR, when DOM manipulation is possible (i.e app is not running in a web worker for e.g).\n * If not possible, most methods simply do nothing, as DOM elements are not available anyway.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgsRevealService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the scrollreveal.js library\n  private sr: NgsScrollReveal;\n\n  // Window Object\n  private window: Window & NgsHasScrollReveal;\n  private config: NgsRevealConfig;\n\n\n   // Observable  sources\n  private beforeRevealSource: Subject;\n  private afterRevealSource: Subject;\n  private beforeResetSource: Subject;\n  private afterResetSource: Subject;\n\n   /**\n    * Observable to subscribe to and get notified before an element is revealed.\n    */\n   beforeReveal$: Observable;\n   /**\n    * Observable to subscribe to and get notified after an element is revealed.\n    */\n   afterReveal$: Observable;\n   /**\n    * Observable to subscribe to and get notified before an element is reset.\n    */\n   beforeReset$: Observable;\n   /**\n    * Observable to subscribe to and get notified after an element is reset.\n    */\n   afterReset$: Observable;\n\n  constructor(config: NgsRevealConfig, windowService: WindowService) {\n     // Observable  sources\n     this.beforeRevealSource = new Subject();\n     this.afterRevealSource = new Subject();\n     this.beforeResetSource = new Subject();\n     this.afterResetSource = new Subject();\n\n     // Observable  streams\n    this.beforeReveal$ = this.beforeRevealSource.asObservable();\n    this.afterReveal$ = this.afterRevealSource.asObservable();\n    this.beforeReset$ = this.beforeResetSource.asObservable();\n    this.afterReset$ = this.afterResetSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgsRevealConfig): void {\n    if (this.window) {// universal support\n      this.config = config;\n\n      // Set callbacks hooks:\n      this.config.beforeReveal = (el: HTMLElement) => this.beforeRevealSource.next(el);\n      this.config.afterReveal = (el: HTMLElement) => this.afterRevealSource.next(el);\n      this.config.beforeReset = (el: HTMLElement) => this.beforeResetSource.next(el);\n      this.config.afterReset = (el: HTMLElement) => this.afterResetSource.next(el);\n\n      // init the scrollReveal library with injected config\n      this.sr = ScrollReveal(config);\n    }\n  }\n\n    /**\n   * Gets the current configuration  used by ScrollReveal.\n   */\n  getConfig(): NgsRevealConfig {\n    return this.config;\n  }\n\n  /**\n   * Method to reveal a single DOM element.\n   * @param elementRef  a reference to the element to reveal\n   * @param config      (optional) custom configuration to use when revealing this element\n   */\n  reveal(elementRef: ElementRef, config?: NgsRevealConfig): void {\n    if (this.window && elementRef.nativeElement) {\n      this.sr.reveal(elementRef.nativeElement, config);\n    }\n  }\n\n  /**\n   * Method to reveal a set of DOM elements.\n   * @param parentElementRef  the parent DOM element encaspulating the child elements to reveal\n   * @param selector          a list of CSS selectors (comma-separated) that identifies child elements to reveal\n   * @param interval          (optional) interval in milliseconds, to animate child elemnts sequentially\n   * @param config            (optional) custom configuration to use when revealing this set of elements\n   */\n  revealSet(parentElementRef: ElementRef, selector: string, interval?: number, config?: NgsRevealConfig): void {\n    if (this.window && parentElementRef.nativeElement) {\n      const options = { ...config, interval: interval};\n      this.sr.reveal(selector, options);\n    }\n  }\n\n  /**\n   * Method to synchronize and consider newly added child elements (for e.g when child elements were added asynchronously to parent DOM) .\n   */\n  sync(): void {\n    if (this.window) {// universal support\n      this.sr.sync();\n    }\n  }\n\n  /**\n   * Reverses the effects of all `reveal()` calls, removing all generated styles and event listeners, and clears the `ScrollReveal` store.\n   */\n  destroy(): void {\n    if (this.window) {\n      this.sr.destroy();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgsRevealSetDirective.html":{"url":"directives/NgsRevealSetDirective.html","title":"directive - NgsRevealSetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NgsRevealSetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/ngs-reveal-set.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive to add 'ScrollReveal' functionality to a set of DOM elements (identify via the [ngsSelector] attribute) in the page.\nThis directive is meant to be placed on the parent node that contains the child elements to reveal.\nYou can optionally add the [ngsInterval] attribute to reveal items sequentially, following the given interval(in milliseconds).\nYou can optionally add the [ngsSync] attribute to reveal new child elements that may have been added in the parent node asynchronously.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngsRevealSet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngsInterval\n                            \n                            \n                                ngsRevealSet\n                            \n                            \n                                ngsSelector\n                            \n                            \n                                ngsSync\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _config\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, ngsRevealService: NgsRevealService)\n                    \n                \n                        \n                            \n                                Defined in src/directives/ngs-reveal-set.directive.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngsRevealService\n                                                  \n                                                        \n                                                                    NgsRevealService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngsInterval\n                    \n                    \n                        Sequence interval (in milliseconds) to the reveal child elements sequentially\n\n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/directives/ngs-reveal-set.directive.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngsRevealSet\n                    \n                    \n                        Custom configuration to use when revealing this set of elements\n\n                    \n                \n                        \n                            \n                                    Defined in src/directives/ngs-reveal-set.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngsSelector\n                    \n                    \n                        CSS selector to identify child elements to reveal\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/directives/ngs-reveal-set.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ngsSync\n                    \n                    \n                        Boolean indicating when the set should be synced, to reveal asynchronously added child elements\n\n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/directives/ngs-reveal-set.directive.ts:43\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/directives/ngs-reveal-set.directive.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/directives/ngs-reveal-set.directive.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _config\n                    \n                \n\n\n                \n                    \n                        set_config(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/directives/ngs-reveal-set.directive.ts:23\n                                \n                            \n                    \n                        \n                                Custom configuration to use when revealing this set of elements\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, OnInit, OnChanges, SimpleChange, ElementRef, Input } from '@angular/core';\nimport { NgsRevealConfig } from '../services/ngs-reveal-config';\nimport { NgsRevealService } from '../services/ngs-reveal.service';\nimport { AbstractNgsRevealDirective } from './ngs-reveal-common.directive';\n\n\n/**\n * Directive to add 'ScrollReveal' functionality to a set of DOM elements (identify via the `[ngsSelector]` attribute) in the page.\n * This directive is meant to be placed on the parent node that contains the child elements to reveal.\n * You can optionally add the `[ngsInterval]` attribute to reveal items sequentially, following the given interval(in milliseconds).\n * You can optionally add the `[ngsSync]` attribute to reveal new child elements that may have been added in the parent node asynchronously.\n *\n */\n@Directive({\n    selector: '[ngsRevealSet]'\n})\nexport class NgsRevealSetDirective extends AbstractNgsRevealDirective implements OnInit, OnChanges {\n\n    /**\n     * Custom configuration to use when revealing this set of elements\n     */\n    @Input('ngsRevealSet')\n    set _config(value: string | NgsRevealConfig) {\n        this._initConfig(value);\n    }\n\n    /**\n     * CSS selector to identify child elements to reveal\n     */\n    @Input()\n    ngsSelector: string;\n\n    /**\n     * Sequence interval (in milliseconds) to the reveal child elements sequentially\n     */\n    @Input()\n    ngsInterval: number;\n\n    /**\n     * Boolean indicating when the set should be synced, to reveal asynchronously added child elements\n     */\n    @Input()\n    ngsSync: boolean;\n\n    constructor(private elementRef: ElementRef, ngsRevealService: NgsRevealService) {\n        super(ngsRevealService);\n    }\n\n    ngOnInit() {\n        if (!this.ngsSelector && console) {\n            const item: string = this.elementRef.nativeElement ? this.elementRef.nativeElement.className : '';\n            console.error(`[ngx-scrollreveal] You must set \"[ngsSelector]\" attribute on item '${item}' when using \"ngsRevealSet\"`);\n            return;\n        }\n        this.ngsRevealService.revealSet(this.elementRef, this.ngsSelector, this.ngsInterval, this.config);\n    }\n\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n\n        const ngsSyncProp = 'ngsSync';\n        if (ngsSyncProp in changes\n            && !changes[ngsSyncProp].isFirstChange()\n            && !changes[ngsSyncProp].currentValue()) {\n            this.ngsRevealService.sync();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgsScrollReveal.html":{"url":"interfaces/NgsScrollReveal.html","title":"interface - NgsScrollReveal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgsScrollReveal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/ngs-reveal.service.ts\n        \n\n            \n                Description\n            \n            \n                Basic interface to represent ScrollReveal object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                        noop\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    clean\n                                \n                                \n                                    destroy\n                                \n                                \n                                    isSupported\n                                \n                                \n                                    reveal\n                                \n                                \n                                    sync\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(target: NgsRevealTarget)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            When non-resetting reveal animations complete, ScrollReveal will remove that elements event listeners, generated styles and metadata.\nIn some cases (such as asynchronous sequences), you may not want this behavior.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                        \n                                                                    NgsRevealTarget\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                the related element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Reverses the effects of all reveal() calls, removing all generated styles and event listeners, and clears the ScrollReveal store.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSupported\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSupported()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reveal\n                            \n                            \n                        \n                    \n                \n                \n                    \nreveal(target: NgsRevealTarget, options?: NgsRevealConfig, syncing?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Registers the target element(s) with ScrollReveal, generates animation styles,\nand attaches event listeners to manage when styles are applied.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                        \n                                                                    NgsRevealTarget\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                element to reveal\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    NgsRevealConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                optionbs to use to reveal\n\n                                                        \n                                                \n                                                \n                                                        syncing\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                whether or not to sync newly added elements (through an asyn call for e.g) with DOM\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sync\n                            \n                            \n                        \n                    \n                \n                \n                    \nsync()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/services/ngs-reveal.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Invokes all previous reveal() calls (with the appropriate arguments), to capture any new elements added to the DOM.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Controls whether or not to output help messages to the console when unexpected things occur at runtime.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noop\n                                    \n                                \n                                \n                                    \n                                        noop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When ScrollReveal is instantiated on unsupported or disabled browsers,\na non-operational instance is created with a noop property that returns true\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Returns the version of ScrollReveal currently loaded on the page.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, ElementRef } from '@angular/core';\nimport { NgsRevealConfig } from './ngs-reveal-config';\nimport { WindowService } from './window.service';\nimport { Subject, Observable } from 'rxjs';\n\n/**\n * Type that represents the target that can be passed to `ScrollReveal().reveal()`.\n */\nexport type NgsRevealTarget = string | HTMLElement | HTMLCollection | Array;\n\n/**\n * Basic interface to represent `ScrollReveal` object.\n */\nexport interface NgsScrollReveal {\n  /**\n   * Controls whether or not to output help messages to the console when unexpected things occur at runtime.\n   */\n  debug?: boolean;\n  /**\n   * When `ScrollReveal` is instantiated on unsupported or disabled browsers,\n   * a non-operational instance is created with a `noop` property that returns `true`\n   */\n  noop: boolean;\n  /**\n   * Returns the version of `ScrollReveal` currently loaded on the page.\n   */\n  version?: string;\n  /**\n   * When non-resetting reveal animations complete, `ScrollReveal` will remove that elements event listeners, generated styles and metadata.\n   * In some cases (such as asynchronous sequences), you may not want this behavior.\n   * @param target the related element\n   */\n  clean(target: NgsRevealTarget): void;\n  /**\n   * Reverses the effects of all `reveal()` calls, removing all generated styles and event listeners, and clears the `ScrollReveal` store.\n   */\n  destroy(): void;\n  /**\n   * Invokes all previous `reveal()` calls (with the appropriate arguments), to capture any new elements added to the DOM.\n   */\n  sync(): void;\n  /**\n   * Registers the target element(s) with ScrollReveal, generates animation styles,\n   * and attaches event listeners to manage when styles are applied.\n   * @param target element to reveal\n   * @param options optionbs to use to reveal\n   * @param syncing whether or not to sync newly added elements (through an asyn call for e.g) with DOM\n   */\n  reveal(target: NgsRevealTarget, options?: NgsRevealConfig, syncing?: boolean): void;\n\n  isSupported(): boolean;\n}\n\n/**\n * The function that returns the `ScrollReveal` instance.\n * @param options Options to use instead of the defaults.\n */\ndeclare function ScrollReveal(options?: NgsRevealConfig): NgsScrollReveal;\n\n/**\n * Marker interface to indicate that an object (typically `window`) has `scrollreveal` property.\n */\nexport interface NgsHasScrollReveal {\n  scrollReveal: NgsScrollReveal;\n}\n\n/**\n * Service to inject in directives to use ScrollReveal JS.\n * It delegates the work to SR, when DOM manipulation is possible (i.e app is not running in a web worker for e.g).\n * If not possible, most methods simply do nothing, as DOM elements are not available anyway.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgsRevealService {\n\n  // the Magic Maker !\n  // this objet is added to window scope when linking the scrollreveal.js library\n  private sr: NgsScrollReveal;\n\n  // Window Object\n  private window: Window & NgsHasScrollReveal;\n  private config: NgsRevealConfig;\n\n\n   // Observable  sources\n  private beforeRevealSource: Subject;\n  private afterRevealSource: Subject;\n  private beforeResetSource: Subject;\n  private afterResetSource: Subject;\n\n   /**\n    * Observable to subscribe to and get notified before an element is revealed.\n    */\n   beforeReveal$: Observable;\n   /**\n    * Observable to subscribe to and get notified after an element is revealed.\n    */\n   afterReveal$: Observable;\n   /**\n    * Observable to subscribe to and get notified before an element is reset.\n    */\n   beforeReset$: Observable;\n   /**\n    * Observable to subscribe to and get notified after an element is reset.\n    */\n   afterReset$: Observable;\n\n  constructor(config: NgsRevealConfig, windowService: WindowService) {\n     // Observable  sources\n     this.beforeRevealSource = new Subject();\n     this.afterRevealSource = new Subject();\n     this.beforeResetSource = new Subject();\n     this.afterResetSource = new Subject();\n\n     // Observable  streams\n    this.beforeReveal$ = this.beforeRevealSource.asObservable();\n    this.afterReveal$ = this.afterRevealSource.asObservable();\n    this.beforeReset$ = this.beforeResetSource.asObservable();\n    this.afterReset$ = this.afterResetSource.asObservable();\n\n    this.window = windowService.nativeWindow;\n    this.init(config);\n  }\n\n  /**\n   * Initializes Cookie Consent with the provided configuration.\n   * @param config the configuration object\n   */\n  init(config: NgsRevealConfig): void {\n    if (this.window) {// universal support\n      this.config = config;\n\n      // Set callbacks hooks:\n      this.config.beforeReveal = (el: HTMLElement) => this.beforeRevealSource.next(el);\n      this.config.afterReveal = (el: HTMLElement) => this.afterRevealSource.next(el);\n      this.config.beforeReset = (el: HTMLElement) => this.beforeResetSource.next(el);\n      this.config.afterReset = (el: HTMLElement) => this.afterResetSource.next(el);\n\n      // init the scrollReveal library with injected config\n      this.sr = ScrollReveal(config);\n    }\n  }\n\n    /**\n   * Gets the current configuration  used by ScrollReveal.\n   */\n  getConfig(): NgsRevealConfig {\n    return this.config;\n  }\n\n  /**\n   * Method to reveal a single DOM element.\n   * @param elementRef  a reference to the element to reveal\n   * @param config      (optional) custom configuration to use when revealing this element\n   */\n  reveal(elementRef: ElementRef, config?: NgsRevealConfig): void {\n    if (this.window && elementRef.nativeElement) {\n      this.sr.reveal(elementRef.nativeElement, config);\n    }\n  }\n\n  /**\n   * Method to reveal a set of DOM elements.\n   * @param parentElementRef  the parent DOM element encaspulating the child elements to reveal\n   * @param selector          a list of CSS selectors (comma-separated) that identifies child elements to reveal\n   * @param interval          (optional) interval in milliseconds, to animate child elemnts sequentially\n   * @param config            (optional) custom configuration to use when revealing this set of elements\n   */\n  revealSet(parentElementRef: ElementRef, selector: string, interval?: number, config?: NgsRevealConfig): void {\n    if (this.window && parentElementRef.nativeElement) {\n      const options = { ...config, interval: interval};\n      this.sr.reveal(selector, options);\n    }\n  }\n\n  /**\n   * Method to synchronize and consider newly added child elements (for e.g when child elements were added asynchronously to parent DOM) .\n   */\n  sync(): void {\n    if (this.window) {// universal support\n      this.sr.sync();\n    }\n  }\n\n  /**\n   * Reverses the effects of all `reveal()` calls, removing all generated styles and event listeners, and clears the `ScrollReveal` store.\n   */\n  destroy(): void {\n    if (this.window) {\n      this.sr.destroy();\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowService.html":{"url":"injectables/WindowService.html","title":"injectable - WindowService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/window.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to interact with the window object.\n\n            \n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nativeWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nativeWindow\n                    \n                \n\n                \n                    \n                        getnativeWindow()\n                    \n                \n                            \n                                \n                                    Defined in src/services/window.service.ts:11\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Service to interact with the window object.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class WindowService {\n\n  get nativeWindow(): any {\n    return _window();\n  }\n}\n\nfunction _window(): any {\n  // Return the global native browser window object\n  return typeof window !== 'undefined' ? window : undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n3.0.0 (2018-09-25)\nChores\n\ncore: rename the project into ngx-scrollreveal (f4c4d1a)\n\nFeatures\n\ncore: migrate to ScrollReveal v4.x.x (7b3c816)\ncore: remove the forRoot() in NgsRevealModule (no longer needed with Angular 6) (b708dec)\ncore: update to Angular v6.x.x and higher (54c8a0a)\n\nBREAKING CHANGES\n\ncore: imports in your application must be updated to consider the new package name ngx-scrollreveal\n\nBefore:\nnpm install --save ng-scrollreveal\n\n...\n\nimport { ... } from 'ng-scrollreveal';After:\nnpm install --save ngx-scrollreveal\n\n...\n\nimport { ... } from 'ngx-scrollreveal';\ncore: NgsRevealModule.forRoot() has been removed, and internally replaced by use of new providedIn option in @Injectable\n\nBefore:\nimport {NgsRevealModule} from 'ng-scrollreveal';\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [NgsRevealModule.forRoot()],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}After:\nimport {NgsRevealModule} from 'ng-scrollreveal';\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [NgsRevealModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\ncore: migration to ScrollReveal v4.x.x brings some breaking changes to be addressed\n\n@types/scrollreveal is no longer necessary and must be removed from your package.son\n\noptions.distance now only supports em, px and % values\nNgsRevealConfig default values have been updated to match ScrollReveal's\nbe aware that ScrollReveal now requires a commercial license, unless for GPL-3.0 compatible open source projects.\n\n\n2.2.0 (2017-11-22)\nFeatures\n\npackaging: relax peerDependencies versions (ccfcec2)\n\n\n2.1.0 (2017-09-23)\nFeatures\n\nuinversal: add universal (server side rendering) support and update demo app (6fac32b), closes #50\n\n\n2.0.3 (2017-06-08)\nBug Fixes\n\nconfig: relax type of config.container into Element | string (b8b56d0), closes #15\n\n\n2.0.2 (2017-03-24)\nBug Fixes\n\npeerDependencies: remove 'angular-cli-ghpages' from peerDependencies (accidentally added since v2.0.0) (141e133)\n\n\n2.0.1 (2017-03-24)\nBug Fixes\n\nconfig: export NgsRevealConfig service to allow global configuration (a3c64cc), closes #6\n\n\n2.0.0 (2017-03-08)\nCode Refactoring\n\nall: move demo app to own folder and improve build tools (504499b)\n\nFeatures\n\nall: making @IgorMinar happy all the way (it's just angular!) (061c648)\n\nBREAKING CHANGES\n\nall: rename UMD bundled file from ng-scrollreveal.min.js to ng-scrollreveal.umd.js\nall: rename package from ng2-scrollreveal to ng-scrollreveal to conform with new Angular Naming Guidelines.\n\nThis only affect how you install and import the library (no actual breaking changes in code).\nBefore:\nnpm install --save ng2-scrollreveal\n\n...\n\nimport { NgsRevealModule } from 'ng2-scrollreveal';After:\nnpm install --save ng-scrollreveal\n...\n\nimport { NgsRevealModule } from 'ng-scrollreveal';\n1.0.1 (2016-11-27)\n\n1.0.0 (2016-11-09)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : 6.0.0\n        \n            @angular/core : 6.0.0\n        \n            scrollreveal : 4.0.2\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _window   (src/.../window.service.ts)\n                        \n                        \n                            and   (src/.../test-helpers.ts)\n                        \n                        \n                            not   (src/.../test-helpers.ts)\n                        \n                        \n                            ScrollReveal   (src/.../ngs-reveal.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/services/window.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _window\n                            \n                            \n                        \n                    \n                \n                \n                    \n_window()\n                    \n                \n\n\n\n\n            \n        \n\n    src/test-helpers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            and\n                            \n                            \n                        \n                    \n                \n                \n                    \nand(predicate1: undefined, predicate2: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        predicate1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        predicate2\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            not\n                            \n                            \n                        \n                    \n                \n                \n                    \nnot(predicate: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        predicate\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/services/ngs-reveal.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ScrollReveal\n                            \n                            \n                        \n                    \n                \n                \n                    \nScrollReveal(options?: undefined)\n                    \n                \n\n\n\n\n                \n                    \n                            The function that returns the ScrollReveal instance.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Options to use instead of the defaults.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nngx-scrollreveal - Angular directives for ScrollReveal JS\n\n\n\n\n\nScrollReveal is a JavaScript library for easily animating elements as they enter/leave the viewport.\nDemo\nView all the directives in action at https://tinesoft.github.io/ngx-scrollreveal\nDependencies\n\nAngular (requires Angular 6+, v2.2.0 is the latest version for Angular \nScrollReveal (requires ScrollReveal 4 or higher, tested with 4.0.2)\n\nInstallation\nInstall above dependencies via npm. In particular for ScrollReveal JS, run:\nnpm install --save scrollreveal\nAngular-CLI\n\nNote: If you are using angular-cli to build your app, make sure that scrollreveal is properly listed as a global library, by editing your angular.json as such:\n\n      \"scripts\": [\n        \"../node_modules/scrollreveal/dist/scrollreveal.js\"\n      ],SystemJS\n\nNote:If you are using SystemJS, you should adjust your configuration to point to the UMD bundle.\nIn your systemjs config file, map needs to tell the System loader where to look for ngx-scrollreveal:\n\nmap: {\n  'ngx-scrollreveal': 'node_modules/ngx-scrollreveal/bundles/ngx-scrollreveal.min.js',\n}In your systemjs config file, meta needs to tell the System loader how to load scrollreveal:\n    meta: {\n    './node_modules/scrollreveal/dist/scrollreveal.min.js': {\n            format: 'amd'\n        }\n    }In your index.html file, add script tag to load  scrollreveal globally:\n    \n    \n    \n    \nNow install ngx-scrollreveal via:\nnpm install --save ngx-scrollrevealOnce installed you need to import the main module:\nimport {NgsRevealModule} from 'ngx-scrollreveal';import {NgsRevealModule} from 'ngx-scrollreveal';\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [NgsRevealModule],  \n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}Usage\nThe library is composed of two main directives: ngsReveal and ngsRevealSet.\nngsReveal Directive\n\nUse this directive to reveal/hide a single DOM element upon scroll.\nBasic Usage\n    ..With Custom Options\nYou can also pass in a custom configuration object to the directive.\n    ..This will override the default configuration used when revealing this particular element.\nWhen no configuration is passed in, the directive uses the default configuration defined at component or at application level.\nConfiguration options are the same as ScrollReveal JS configuration object.\nngsRevealSet Directive\n\nUse this directive to reveal/hide a set of DOM elements upon scroll.\n[ngsSelector] attribute is required, and defines which child items must be revealed/hidden on scroll.\n\nNote: The value is a list of CSS selectors (comma-separated).\n\nBasic Usage\n    \n        Item 1\n        Item 2\n        Item 3\n        Item 4\n        Item 5 (will not be animated)\n    With Custom Options\n    \n        Item 1\n        Item 2\n        Item 3\n        Item 4\n        Item 5 (will not be animated)\n    Configuration options are the same as ScrollReveal JS configuration object. \nSequentially animated items\nChild items inside the parent set can be sequentially animated, by adding the [ngsRevealInterval] attribute.\n\nNote: The interval is the time until the next element in the sequence begins its reveal, which is separate from the time until the element’s animation completes. In this example, the sequence interval is 50 milliseconds.\n\n    \n        Item 1\n        Item 2\n        Item 3\n        Item 4\n        Item 5 (will not be animated)\n    \nGlobal Configuration\n\nYou can inject the config service, typically in your root component, and customize the values of its properties in order to provide default values for all the ng-reveal directives used in the application.\nimport {Component} from '@angular/core';\nimport {NgsRevealConfig} from 'ngx-scrollreveal';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [NgsRevealConfig] // add NgsRevealConfig to the component providers\n})\nexport class AppComponent {\n  constructor(config: NgsRevealConfig) {\n    // customize default values of ngx-scrollreveal directives used by this component tree\n    config.duration = 5000;\n    config.easing = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\n\n    //other options here\n  }\n}Subscribing to ScrollReveal events\n\nYou can now subscribe to some events triggered by ScrollReveal before/after an element is revealed/reset.\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgsRevealService } from 'ngx-scrollreveal';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy{\n  constructor(private revealService: NgsRevealService) {\n  }\n\n  ngOnInit() {\n    // subscribe to ScrollReveal observables to react to main events\n    this.beforeRevealSubscription = this.revealService.beforeReveal$.subscribe(\n      (el: HTMLElement) => {\n        console.log(`beforeReveal of '.${el.className}'`);\n      });\n\n    this.afterRevealSubscription = this.revealService.afterReveal$.subscribe(\n      (el: HTMLElement) => {\n        console.log(`afterReveal of '.${el.className}'`);\n    });\n\n    this.beforeResetSubscription = this.revealService.beforeReset$.subscribe(\n      (el: HTMLElement) => {\n        console.log(`beforeReset of '.${el.className}'`);\n    });\n\n    this.afterResetSubscription = this.revealService.afterReset$.subscribe(\n      (el: HTMLElement) => {\n        console.log(`afterReset of '.${el.className}'`);\n    });\n  }\n\n  ngOnDestroy() {\n    // unsubscribe to ScrollReveal observables to prevent memory leaks\n    this.beforeRevealSubscription.unsubscribe();\n    this.afterRevealSubscription.unsubscribe();\n    this.beforeResetSubscription.unsubscribe();\n    this.afterResetSubscription.unsubscribe();\n  }\n}\nCredits\nngx-scrollreveal is built upon ScrollReveal JS by Julian Lloyd. Thanks to him for the great work!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Tine Kondo\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgsRevealModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgsRevealModule\n\n\n\ncluster_NgsRevealModule_declarations\n\n\n\ncluster_NgsRevealModule_exports\n\n\n\n\nNgsRevealDirective\n\nNgsRevealDirective\n\n\n\nNgsRevealModule\n\nNgsRevealModule\n\nNgsRevealModule -->\n\nNgsRevealDirective->NgsRevealModule\n\n\n\n\n\nNgsRevealSetDirective\n\nNgsRevealSetDirective\n\nNgsRevealModule -->\n\nNgsRevealSetDirective->NgsRevealModule\n\n\n\n\n\nNgsRevealDirective \n\nNgsRevealDirective \n\nNgsRevealDirective  -->\n\nNgsRevealModule->NgsRevealDirective \n\n\n\n\n\nNgsRevealSetDirective \n\nNgsRevealSetDirective \n\nNgsRevealSetDirective  -->\n\nNgsRevealModule->NgsRevealSetDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgsRevealTarget   (src/.../ngs-reveal.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/services/ngs-reveal.service.ts\n    \n        \n            \n                \n                    \n                        \n                        NgsRevealTarget\n                    \n                \n                    \n                        \n                            Type that represents the target that can be passed to ScrollReveal().reveal().\n\n                        \n                    \n                \n                    \n                        NgsRevealTarget:     string | HTMLElement | HTMLCollection | Array\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
